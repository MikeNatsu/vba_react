[{"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js":"1","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js":"2","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js":"3","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js":"4","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js":"5","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js":"6","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js":"7","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js":"8","A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js":"9","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js":"10","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js":"11","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js":"12","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js":"13","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js":"14","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js":"15","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js":"16","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js":"17","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js":"18","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js":"19","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js":"20","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js":"21","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js":"22","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js":"23","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateChoiceReducer.js":"24"},{"size":567,"mtime":1608950319415,"results":"25","hashOfConfig":"26"},{"size":316,"mtime":1613276786235,"results":"27","hashOfConfig":"26"},{"size":1029,"mtime":1613531260649,"results":"28","hashOfConfig":"26"},{"size":455,"mtime":1612845854844,"results":"29","hashOfConfig":"26"},{"size":3026,"mtime":1613532118691,"results":"30","hashOfConfig":"26"},{"size":259,"mtime":1609466132147,"results":"31","hashOfConfig":"26"},{"size":236,"mtime":1609005871074,"results":"32","hashOfConfig":"26"},{"size":259,"mtime":1613169777118,"results":"33","hashOfConfig":"26"},{"size":102,"mtime":1609641603356,"results":"34","hashOfConfig":"26"},{"size":322,"mtime":1609993617926,"results":"35","hashOfConfig":"26"},{"size":456,"mtime":1613251338984,"results":"36","hashOfConfig":"26"},{"size":316,"mtime":1613169781340,"results":"37","hashOfConfig":"26"},{"size":244,"mtime":1613105968512,"results":"38","hashOfConfig":"26"},{"size":4751,"mtime":1613532525021,"results":"39","hashOfConfig":"26"},{"size":3902,"mtime":1613277787266,"results":"40","hashOfConfig":"26"},{"size":1942,"mtime":1613277794107,"results":"41","hashOfConfig":"26"},{"size":3491,"mtime":1613277794107,"results":"42","hashOfConfig":"26"},{"size":418,"mtime":1613280220450,"results":"43","hashOfConfig":"26"},{"size":1433,"mtime":1613279787136,"results":"44","hashOfConfig":"26"},{"size":1324,"mtime":1613280202329,"results":"45","hashOfConfig":"26"},{"size":5771,"mtime":1613525949431,"results":"46","hashOfConfig":"26"},{"size":3140,"mtime":1613260528726,"results":"47","hashOfConfig":"26"},{"size":3379,"mtime":1613538267811,"results":"48","hashOfConfig":"26"},{"size":264,"mtime":1613532146834,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"mfu6s6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js",[],["105","106"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js",["107"],"// reducers for changing the property of the node\r\n// todo: change later\r\n\r\nconst INITIAL_STATE = {\r\n    mainFlow : null\r\n}\r\n\r\nconst mainFlowReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NODE':\r\n            return {...state, ...action.payload}\r\n        case 'MODIFY_NODE_PROPERTY':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mainFlowReducer;","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js",["108"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js",["109","110","111","112","113","114","115"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Dropdown, Checkbox, Menu, Radio } from 'semantic-ui-react';\r\nimport { columnTypeChanged, toggleInsertColumn } from '../../../../actions'\r\nimport hljs from 'highlight.js';\r\nimport hljsVba from 'highlight.js/lib/vba';\r\n\r\nclass currentColumnList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {colTypeMap: {\r\n            'na': 'Do not use',\r\n            'num': 'Numeric',\r\n            'txt': 'Text'\r\n        }}\r\n    }\r\n\r\n    newTypePicked = (e, data) => {\r\n        let tmp_type = {}\r\n        tmp_type[data.target_col] = data.value\r\n        this.props.columnTypeChanged(tmp_type)\r\n    }\r\n    \r\n    getColumnChoices = () => {\r\n        let cols = _.keys(this.props.columnChoices)\r\n        let columnDropDown = cols.map((e) => {\r\n            if (e != 'insertColumnFlag') {\r\n                return (\r\n                    <div className=\"column_choices_list\">\r\n                        <p>{e}</p>\r\n                        <div className='drop-down-cont'>\r\n                            <Dropdown\r\n                                options = {[{\r\n                                    key: {e} + 'na',\r\n                                    text:\"Do not use\",\r\n                                    value:'na',\r\n                                    active:this.props.columnChoices[e] == 'na'\r\n                                },\r\n                                {\r\n                                    key: {e} + 'num',\r\n                                    text:\"Numeric\",\r\n                                    value:'num',\r\n                                    active:this.props.columnChoices[e] == 'num',\r\n                                    \r\n                                },\r\n                                {\r\n                                    key: {e} + 'txt',\r\n                                    text:\"Text\",\r\n                                    value:'txt',\r\n                                    active:this.props.columnChoices[e] == 'txt'\r\n                                }]}\r\n\r\n                                text = {this.state.colTypeMap[this.props.columnChoices[e]]}\r\n                                target_col = {e}\r\n                                onChange = {this.newTypePicked}\r\n                            >\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                    </div> \r\n                )\r\n            }\r\n\r\n        })\r\n\r\n        return columnDropDown\r\n    }\r\n\r\n    toggleInsertColumn = (e, data) => {\r\n        if (data.checked) {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':true})\r\n        } else {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':false})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render () {\r\n        hljs.initHighlighting.called = false;\r\n        hljs.initHighlighting();\r\n        hljs.registerLanguage(\"vba\", hljsVba);\r\n        return (\r\n            <React.Fragment>\r\n                <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                />\r\n                {this.getColumnChoices()}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'columnChoices': state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { toggleInsertColumn, columnTypeChanged } )(currentColumnList)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js",["116"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport TemplateDescription from './template_description_sections/template_description'\r\n\r\nclass templateDescriptionSection extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <TemplateDescription />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default templateDescriptionSection","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js",["117","118"],"\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass templateDescription extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    displayHeading = () => {\r\n        if (this.props.selectedFuncInfo == 'overall_descrip'){\r\n            return \"ABOUT THIS TEMPLATE\"\r\n        } else {\r\n            return \"ABOUT THIS FUNCTION\"\r\n        }\r\n    }\r\n\r\n    renderTemplateDescrip = () => {\r\n        if (this.props.funcDescrip != null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"descrip-header\">{this.props.selectedFuncInfo}</p>\r\n                    <p className=\"descrip-txt\">\r\n                        {this.props.funcDescrip[this.props.selectedFuncInfo]}\r\n                    </p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.props.funcDescrip != null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p topic=\"dq\" className=\"menu-header-h1\">{this.displayHeading()}</p>\r\n                    {this.renderTemplateDescrip()}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        funcDescrip : state.templateCodeInfo,\r\n        selectedFuncInfo: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(templateDescription)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js",["119","120","121","122"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { parseTemplateRequest, parseTemplateOptions } from '../../actions/index';\r\nimport FunctionBreakdownBar from './template_display_sections/functionBreakdown';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\n\r\nclass templateDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.props.parseTemplateRequest()\r\n        // this.props.parseTemplateOptions()\r\n        console.log('templateDisplay is called')\r\n        this.state = { activeIndex: [0,1]}\r\n    }\r\n\r\n    handleTitleClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.activeIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ activeIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ activeIndex: activeIndexAry.concat(index) })\r\n        }\r\n\r\n    }\r\n\r\n    getHighlightStatus = (capture) => {\r\n        if (this.props.highlightCodeSelection.includes(capture)) {\r\n            return 'section'\r\n        }\r\n        \r\n        return ''\r\n    }\r\n\r\n    parseTemplateCode = () => {\r\n        let numColumnsToInsert = []\r\n        let txtColumnsToInsert = []\r\n        let numRegex = /<jsNumParse>/\r\n\r\n        if (this.props.columnChoices.insertColumnFlag) {\r\n            \r\n            for (let [colName, colType] of Object.entries(this.props.columnChoices)){\r\n                if (colName != 'insertColumnFlag'){\r\n                    if (colType == 'num'){\r\n                        numColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                    } else if (colType == 'txt'){\r\n                        txtColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (numColumnsToInsert.length > 0) {\r\n                let replacedTemplate\r\n                numColumnsToInsert = numColumnsToInsert.join(',')\r\n                replacedTemplate = this.props.templateToDisplay.replace(numRegex, numColumnsToInsert)\r\n                return (replacedTemplate === this.props.templateToDisplay ? this.props.templateToDisplay : replacedTemplate)\r\n            }\r\n\r\n        }\r\n\r\n        return this.props.templateToDisplay\r\n\r\n    }\r\n\r\n    // parseTemplateCode = () => {\r\n    //     // let split_code = this.props.templateToDisplay.split('End Function')\r\n    //     let split_code = [1,2,3,4,5]\r\n    //     // let section_together = []\r\n    //     // let captureRegex = /Function (\\w+)/\r\n\r\n    //     // for (let [ind, func] of split_code.entries()) {\r\n    //     //     let capture = func.match(captureRegex)\r\n\r\n    //     //     if (capture != null) {\r\n    //     //         capture = capture[1]\r\n    //     //     } else {\r\n    //     //         capture = ''\r\n    //     //     }\r\n\r\n    //     let code = split_code.map((el, ind) => {\r\n    //         return (<div key={ind} className={this.props.highlightCodeSelection}>\r\n    //             {el}\r\n    //             {\"\\n\"}\r\n    //             {this.props.highlightCodeSelection}\r\n    //             End Function\r\n    //         </div>)\r\n    //     })\r\n\r\n\r\n    \r\n    //     return (\r\n                                    \r\n\r\n    //             code\r\n            \r\n    //     )\r\n\r\n    // }\r\n\r\n    render () {\r\n        if (this.props.templateToDisplay != '') {\r\n            \r\n            return (\r\n                <React.Fragment>\r\n                    <Accordion className=\"inner-cont\">\r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(0)}\r\n                            index={0}\r\n                            className=\"menu-header-h1 noselect\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            Template Code Function(s)\r\n                        </Accordion.Title>\r\n                        <Accordion.Content style={{paddingBottom: '0px'}} active={this.state.activeIndex.includes(0)}>\r\n                            <FunctionBreakdownBar />\r\n                        </Accordion.Content>\r\n                        \r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(1)}\r\n                            index={1}\r\n                            className=\"menu-header-h1 noselect\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            Code\r\n                        </Accordion.Title>\r\n\r\n                        <Accordion.Content style={{marginLeft: \"7px\", height: '100%', maxHeight: 'calc(100vh - 251px)', overflow: 'auto'}} active={this.state.activeIndex.includes(1)}>\r\n                            <pre>                                \r\n                                <code className=\"vba\" >\r\n                                    {this.parseTemplateCode()}\r\n                                </code>\r\n                            </pre> \r\n\r\n                            {/* <div style={{border:\"2px black solid\"}}>\r\n                            </div> */}\r\n                        </Accordion.Content>\r\n\r\n                    </Accordion>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (null)\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        highlightCodeSelection: state.highlightCodeSelection,\r\n        columnChoices: state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {parseTemplateRequest, parseTemplateOptions}) (templateDisplay)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js",["123","124","125","126","127","128"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {templateFunctionBreakdownSelect} from '../../../actions';\r\n\r\nclass functionBreakdownSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {'functionInfoSelected':'overall_descrip'}\r\n    }\r\n\r\n    funcBreakdownClick = (func_n) => {\r\n        this.props.templateFunctionBreakdownSelect(func_n)\r\n    }\r\n\r\n    onMouseEnter = (e, d) => {\r\n        // this.props.templateFunctionBreakdownSelect({'funcSelected' : e.target.id})\r\n        // this.setState({'functionInfoSelected': e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n    }\r\n\r\n    onFuncClick = (e) => {\r\n        this.setState({'functionInfoSelected':e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.props.templateFunctionBreakdownSelect(this.state.functionInfoSelected)\r\n    }\r\n\r\n    getFunctionBreakdown = () => {\r\n        if (this.props.templateToDisplay !=  null) {\r\n            // let split_code = this.props.templateToDisplay.split('End Function')\r\n            // let captureRegex = /Function (\\w+)/\r\n            let split_code;\r\n            let func_name;\r\n            split_code = Object.keys(this.props.templateToDisplay).map((func_name) => {\r\n                if ((func_name != 'template_code') && (func_name != 'overall_descrip')) {\r\n                    // let func_name;\r\n                    // func_name = el.match(captureRegex)[1]\r\n                    return (\r\n                        <p \r\n                        id={func_name}\r\n                        key={func_name}\r\n                        onClick={this.onFuncClick}\r\n                        onMouseEnter={this.onMouseEnter}\r\n                        onMouseLeave={this.onMouseLeave}\r\n                        className={this.state.functionInfoSelected == func_name ? 'active' : ''}>\r\n                            {func_name}\r\n                        </p>\r\n                    )\r\n                }\r\n            })\r\n            \r\n            split_code.splice(0, 0,\r\n                <p \r\n                    id=\"overall_descrip\"\r\n                    key=\"overall_descrip\"\r\n                    onClick={this.onFuncClick}\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                    className={this.state.functionInfoSelected == 'overall_descrip' ? 'active' : ''}>\r\n                        Template Code Overview\r\n                </p>)\r\n                \r\n            return split_code\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"function-break-down\">\r\n                    {this.getFunctionBreakdown()}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo,\r\n        funcInfoSelect: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {templateFunctionBreakdownSelect})(functionBreakdownSection)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js",["129","130","131"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateChoiceReducer.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":4,"column":7,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":13,"column":19,"nodeType":"142","messageId":"143","endLine":13,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":4,"column":30,"nodeType":"138","messageId":"139","endLine":4,"endColumn":34},{"ruleId":"136","severity":1,"message":"145","line":4,"column":36,"nodeType":"138","messageId":"139","endLine":4,"endColumn":41},{"ruleId":"146","severity":1,"message":"147","line":27,"column":43,"nodeType":"148","messageId":"149","endLine":27,"endColumn":45},{"ruleId":"140","severity":1,"message":"150","line":28,"column":19,"nodeType":"142","messageId":"143","endLine":28,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":38,"column":72,"nodeType":"142","messageId":"143","endLine":38,"endColumn":74},{"ruleId":"140","severity":1,"message":"141","line":44,"column":72,"nodeType":"142","messageId":"143","endLine":44,"endColumn":74},{"ruleId":"140","severity":1,"message":"141","line":51,"column":72,"nodeType":"142","messageId":"143","endLine":51,"endColumn":74},{"ruleId":"136","severity":1,"message":"151","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":6,"column":5,"nodeType":"154","messageId":"155","endLine":9,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":12,"column":41,"nodeType":"142","messageId":"143","endLine":12,"endColumn":43},{"ruleId":"140","severity":1,"message":"150","line":46,"column":29,"nodeType":"142","messageId":"143","endLine":46,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":47,"column":33,"nodeType":"142","messageId":"143","endLine":47,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":49,"column":40,"nodeType":"142","messageId":"143","endLine":49,"endColumn":42},{"ruleId":"140","severity":1,"message":"150","line":104,"column":42,"nodeType":"142","messageId":"143","endLine":104,"endColumn":44},{"ruleId":"136","severity":1,"message":"156","line":35,"column":17,"nodeType":"138","messageId":"139","endLine":35,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":36,"column":84,"nodeType":"148","messageId":"149","endLine":36,"endColumn":86},{"ruleId":"140","severity":1,"message":"150","line":37,"column":32,"nodeType":"142","messageId":"143","endLine":37,"endColumn":34},{"ruleId":"140","severity":1,"message":"150","line":37,"column":66,"nodeType":"142","messageId":"143","endLine":37,"endColumn":68},{"ruleId":"140","severity":1,"message":"141","line":47,"column":68,"nodeType":"142","messageId":"143","endLine":47,"endColumn":70},{"ruleId":"140","severity":1,"message":"141","line":61,"column":64,"nodeType":"142","messageId":"143","endLine":61,"endColumn":66},{"ruleId":"140","severity":1,"message":"150","line":17,"column":39,"nodeType":"142","messageId":"143","endLine":17,"endColumn":41},{"ruleId":"140","severity":1,"message":"150","line":28,"column":24,"nodeType":"142","messageId":"143","endLine":28,"endColumn":26},{"ruleId":"140","severity":1,"message":"150","line":46,"column":26,"nodeType":"142","messageId":"143","endLine":46,"endColumn":28},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'INITIAL_STATE' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Menu' is defined but never used.","'Radio' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'connect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'func_name' is defined but never used.","no-global-assign","no-unsafe-negation"]