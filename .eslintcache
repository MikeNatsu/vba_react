[{"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js":"1","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js":"2","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js":"3","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js":"4","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js":"5","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js":"6","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js":"7","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js":"8","A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js":"9","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js":"10","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js":"11","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js":"12","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js":"13","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js":"14","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js":"15","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js":"16","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js":"17","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js":"18","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js":"19","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js":"20","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js":"21","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js":"22","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js":"23","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateChoiceReducer.js":"24","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\index.js":"25","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\code_options\\codeOptions.js":"26","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\appHeader.js":"27"},{"size":679,"mtime":1614570455798,"results":"28","hashOfConfig":"29"},{"size":398,"mtime":1614570799596,"results":"30","hashOfConfig":"29"},{"size":1029,"mtime":1613531260649,"results":"31","hashOfConfig":"29"},{"size":455,"mtime":1612845854844,"results":"32","hashOfConfig":"29"},{"size":3180,"mtime":1614562988882,"results":"33","hashOfConfig":"29"},{"size":259,"mtime":1609466132147,"results":"34","hashOfConfig":"29"},{"size":236,"mtime":1609005871074,"results":"35","hashOfConfig":"29"},{"size":259,"mtime":1613169777118,"results":"36","hashOfConfig":"29"},{"size":102,"mtime":1609641603356,"results":"37","hashOfConfig":"29"},{"size":322,"mtime":1609993617926,"results":"38","hashOfConfig":"29"},{"size":456,"mtime":1613251338984,"results":"39","hashOfConfig":"29"},{"size":316,"mtime":1613169781340,"results":"40","hashOfConfig":"29"},{"size":244,"mtime":1614046793773,"results":"41","hashOfConfig":"29"},{"size":4452,"mtime":1614570740429,"results":"42","hashOfConfig":"29"},{"size":3827,"mtime":1614223399014,"results":"43","hashOfConfig":"29"},{"size":1942,"mtime":1613277794107,"results":"44","hashOfConfig":"29"},{"size":3731,"mtime":1614224068643,"results":"45","hashOfConfig":"29"},{"size":418,"mtime":1613280220450,"results":"46","hashOfConfig":"29"},{"size":1618,"mtime":1614222147996,"results":"47","hashOfConfig":"29"},{"size":1418,"mtime":1614403541341,"results":"48","hashOfConfig":"29"},{"size":9457,"mtime":1614564359643,"results":"49","hashOfConfig":"29"},{"size":3465,"mtime":1614564447963,"results":"50","hashOfConfig":"29"},{"size":5162,"mtime":1614562556346,"results":"51","hashOfConfig":"29"},{"size":590,"mtime":1614562856732,"results":"52","hashOfConfig":"29"},{"size":347,"mtime":1613621418579,"results":"53","hashOfConfig":"29"},{"size":2252,"mtime":1614559188426,"results":"54","hashOfConfig":"29"},{"size":706,"mtime":1614571628604,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mfu6s6",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js",["121"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js",[],["122","123"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js",["124"],"// reducers for changing the property of the node\r\n// todo: change later\r\n\r\nconst INITIAL_STATE = {\r\n    mainFlow : null\r\n}\r\n\r\nconst mainFlowReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NODE':\r\n            return {...state, ...action.payload}\r\n        case 'MODIFY_NODE_PROPERTY':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mainFlowReducer;","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js",["125"],"import parseRequestAxio from '../apis/parseRequest'\r\n// import hljs from 'highlight.js';\r\n// import '../components/mainAppLayout/node_modules/highlight.js/styles/github.css';\r\n// import hljsVba from 'highlight.js/lib/vba';\r\n// console.log(hljs)\r\n\r\nconst getInitialNodeProp = (nodeID) => {\r\n    // move this into another file at some point\r\n    let nodePropObj = {}\r\n    //bunch of rules here for intiail node property\r\n    let nodeClass = nodeID.split('-')[0]\r\n    \r\n    if (nodeClass == 'dqNum') {\r\n        nodePropObj[nodeID] = {\r\n            columns: '',\r\n            error_flag: ''\r\n        }\r\n    \r\n    }\r\n\r\n    return nodePropObj\r\n}\r\n\r\nexport const addNodeToFlow = (mainFlowNodes) => {\r\n    let nodeID = Object.keys(mainFlowNodes)[0]\r\n\r\n    let newNode = {...mainFlowNodes, ...getInitialNodeProp(nodeID)}\r\n    return {\r\n        type: 'ADD_NODE',\r\n        payload: newNode\r\n    }\r\n}\r\n\r\nexport const modifyNodeProperty = (nodeClass, changedProps) => {\r\n    let payload = {}\r\n    payload[nodeClass] = changedProps\r\n\r\n    return {\r\n        type: 'MODIFY_NODE_PROPERTY',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const selectNode = (nodeClass) => {\r\n    return {\r\n        type: 'SELECT_NODE',\r\n        payload: nodeClass\r\n    }\r\n}\r\n\r\nexport const selectMenu = (topic) => {\r\n    return {\r\n        type: 'SELECT_MENU_OPTION',\r\n        payload: topic\r\n    }\r\n}\r\n\r\nexport const parseTemplateRequest = (heading, templateId) => {\r\n    return async (dispatch, getState) => {\r\n        let response = await parseRequestAxio.get('/getTemplate/', {params : {'heading': heading, \r\n                                                                              'template_id': templateId}});\r\n        dispatch({ type: \"PARSE_TEMPLATE_CODE\", payload: response.data});\r\n\r\n      }\r\n}\r\n\r\nexport const mouseOverProperty = (propertyType) => {\r\n    return {\r\n        type: \"MOUSEOVER_PROPERTY\",\r\n        payload: propertyType\r\n    }\r\n}\r\n\r\nexport const mouseOutOfProperty = (propertyType) => {\r\n    return {\r\n        type: \"MOUSEOUT_PROPERTY\"\r\n    }\r\n}\r\n\r\nexport const columnDropDownSubmit = (columnList) => {\r\n    return {\r\n        type: \"COLUMN_LIST_SUBMIT\",\r\n        payload: columnList\r\n    }\r\n}\r\n\r\nexport const columnTypeChanged = (newType) => {\r\n    return {\r\n        type: 'COLUMN_TYPE_CHANGED',\r\n        payload: newType\r\n    }\r\n}\r\n\r\nexport const templateFunctionBreakdownSelect = (func_name) => {\r\n    return {\r\n        type: 'ADD_HIGHLIGHT_SECTION',\r\n        payload: func_name\r\n    }\r\n}\r\n\r\nexport const toggleInsertColumn = (toggleStatus) => {\r\n    return {\r\n        type: 'TOGGLE_INSERT_COLUMN',\r\n        payload: toggleStatus\r\n    }\r\n}\r\n\r\nexport const parseTemplateOptions = () => {\r\n    return async (dispatch) => {\r\n        const response = await (parseRequestAxio.get('/menuOptions/'))\r\n        dispatch({type: 'GET_TEMPLATE_OPTIONS', payload: response.data})\r\n    }\r\n}\r\n\r\nexport const templateOptionClicked = () => {\r\n    return {\r\n        type: 'TEMPLATE_OPTION_CLICKED',\r\n        payload: {'templateChoiceClicked': true}\r\n    }\r\n}\r\n\r\nexport const templateCodeChoice = (templateID) => {\r\n    return {\r\n        type: 'TEMPLATE_OPTION_CHOICE',\r\n        payload: templateID\r\n    }\r\n}","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js",["126","127"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js",["128","129","130","131","132","133","134","135"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Dropdown, Checkbox, Menu, Radio } from 'semantic-ui-react';\r\nimport { columnTypeChanged, toggleInsertColumn } from '../../../../actions'\r\n\r\nclass currentColumnList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {colTypeMap: {\r\n            'na': 'Do not use',\r\n            'num': 'Numeric',\r\n            'txt': 'Text'\r\n        }}\r\n    }\r\n\r\n    newTypePicked = (e, data) => {\r\n        let tmp_type = {}\r\n        tmp_type[data.target_col] = data.value\r\n        this.props.columnTypeChanged(tmp_type)\r\n    }\r\n    \r\n    getColumnChoices = () => {\r\n        let cols = _.keys(this.props.columnChoices)\r\n        let columnDropDown = cols.map((e) => {\r\n            if (e != 'insertColumnFlag') {\r\n                return (\r\n                    <div className=\"column_choices_list\">\r\n                        <p>{e}</p>\r\n                        <div className='drop-down-cont'>\r\n                            <Dropdown\r\n                                options = {[{\r\n                                    key: {e} + 'na',\r\n                                    text:\"Do not use\",\r\n                                    value:'na',\r\n                                    active:this.props.columnChoices[e] == 'na'\r\n                                },\r\n                                {\r\n                                    key: {e} + 'num',\r\n                                    text:\"Numeric\",\r\n                                    value:'num',\r\n                                    active:this.props.columnChoices[e] == 'num',\r\n                                    \r\n                                },\r\n                                {\r\n                                    key: {e} + 'txt',\r\n                                    text:\"Text\",\r\n                                    value:'txt',\r\n                                    active:this.props.columnChoices[e] == 'txt'\r\n                                }]}\r\n\r\n                                text = {this.state.colTypeMap[this.props.columnChoices[e]]}\r\n                                target_col = {e}\r\n                                onChange = {this.newTypePicked}\r\n                                className = \"column-picker\"\r\n                            >\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                    </div> \r\n                )\r\n            }\r\n\r\n        })\r\n\r\n        if (cols.length != 1) {\r\n            columnDropDown.unshift(                \r\n                <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                    className=\"insert_checkbox\"\r\n                />\r\n            )\r\n        }\r\n\r\n        return columnDropDown\r\n    }\r\n\r\n    toggleInsertColumn = (e, data) => {\r\n        if (data.checked) {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':true})\r\n        } else {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':false})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                {/* <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                    className=\"insert_checkbox\"\r\n                /> */}\r\n                {this.getColumnChoices()}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'columnChoices': state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { toggleInsertColumn, columnTypeChanged } )(currentColumnList)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js",["136"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport TemplateDescription from './template_description_sections/template_description'\r\n\r\nclass templateDescriptionSection extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <TemplateDescription />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default templateDescriptionSection","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js",["137","138","139"],"\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass templateDescription extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    displayHeading = () => {\r\n        if (this.props.selectedFuncInfo == 'overall_descrip'){\r\n            return \"ABOUT THIS TEMPLATE\"\r\n        } else {\r\n            return \"ABOUT THIS FUNCTION\"\r\n        }\r\n    }\r\n\r\n    renderTemplateDescrip = () => {\r\n        if (this.props.funcDescrip != null) {\r\n            let descripHeader\r\n            descripHeader = this.props.selectedFuncInfo == 'overall_descrip' ? \"Overall Template Description\" :  this.props.selectedFuncInfo\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"descrip-header\">{descripHeader}</p>\r\n                    <p className=\"descrip-txt\">\r\n                        {this.props.funcDescrip[this.props.selectedFuncInfo]}\r\n                    </p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.props.funcDescrip != null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p topic=\"dq\" className=\"menu-header-h1\">{this.displayHeading()}</p>\r\n                    {this.renderTemplateDescrip()}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        funcDescrip : state.templateCodeInfo.template_func_description,\r\n        selectedFuncInfo: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(templateDescription)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { parseTemplateRequest, parseTemplateOptions } from '../../actions/index';\r\nimport FunctionBreakdownBar from './template_display_sections/functionBreakdown';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport hljs from 'highlight.js';\r\n// import hljsVba from 'highlight.js/lib/vba';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nclass templateDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        // hljs.registerLanguage(\"vba\", hljsVba);\r\n        // this.props.parseTemplateOptions()\r\n        this.state = {activeIndex: [0,1], syntaxHighlighted: false}\r\n        this.codeLoaded = false\r\n        this.validTemplateCode = false\r\n    }\r\n    \r\n    triggerFunctionBreak = () => {\r\n        if ((!(this.state.codeLoaded)) && (this.props.templateToDisplay != null)) {\r\n            this.setState({codeLoaded : true})\r\n        }\r\n    }\r\n\r\n\r\n    handleTitleClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.activeIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ activeIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ activeIndex: activeIndexAry.concat(index) })\r\n        }\r\n\r\n    }\r\n\r\n    getHighlightStatus = (capture) => {\r\n        if (this.props.highlightCodeSelection.includes(capture)) {\r\n            return 'section'\r\n        }\r\n        \r\n        return ''\r\n    }\r\n\r\n    isSectionSelected = (funcBlock) => {\r\n        let captureRegexFunc = /Function (\\w+)/\r\n        let captureRegexSub = /Sub (\\w+)/\r\n        let capture\r\n\r\n        if (funcBlock.match(captureRegexFunc)) {\r\n                capture = funcBlock.match(captureRegexFunc)\r\n            }\r\n        else {\r\n                capture = funcBlock.match(captureRegexSub)\r\n            }\r\n        \r\n\r\n        if (capture != null) {\r\n            capture = capture[1]\r\n            if (this.props.highlightCodeSelection == capture) {\r\n                return 'codeDiv highlighted'\r\n            }\r\n        }\r\n\r\n        return 'codeDiv'\r\n        \r\n    }\r\n\r\n    markTemplateCode = (templateCodeToSplit) => {\r\n        let [split_code_sub, split_code_func] = templateCodeToSplit.split(new RegExp('end sub', 'i'))\r\n        split_code_func = split_code_func != null ? split_code_func.split(new RegExp('end function', 'i')) : ''\r\n        let split_code = [split_code_sub, ...split_code_func]\r\n        let functionIdAry = Object.keys(this.props.templateCodeInfo)\r\n        functionIdAry.splice(functionIdAry.indexOf('overall_descrip'), 1)\r\n        let code = split_code.map((el, ind) => {\r\n                            if (el != '') {\r\n                                // detect if it's a sub or function\r\n                                let capture_regex_sub = /sub (\\w+)/\r\n                                let codeSection \r\n                                if (el.toLowerCase().match(capture_regex_sub)){\r\n                                    codeSection = el.trim() + \"\\nEnd Sub\"     \r\n                                } else {\r\n                                    codeSection = el.trim() + \"\\nEnd Function\"    \r\n                                }\r\n\r\n                                return (\r\n                                    <React.Fragment>\r\n                                    \r\n                                        <a id = {this.props.templateChoiceID + \"#\" + functionIdAry[ind]}></a>\r\n                                        <div className={this.isSectionSelected(el)}>\r\n                                            \r\n                                            <SyntaxHighlighter language='vba'>\r\n                                                {codeSection}                                                \r\n                                            </SyntaxHighlighter>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n    \r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    )\r\n\r\n        return code\r\n    }\r\n\r\n    parseTemplateCode = () => {\r\n        if (this.props.templateToDisplay != null) {\r\n\r\n            let numColumnsToInsert = []\r\n            let txtColumnsToInsert = []\r\n            let numRegex = /<jsNumParse>/\r\n            let txtRegex = /<jsTxtParse>/\r\n            if (this.props.columnChoices.insertColumnFlag) {\r\n                let replacedTemplate\r\n    \r\n                for (let [colName, colType] of Object.entries(this.props.columnChoices)){\r\n                    if (colName != 'insertColumnFlag'){\r\n                        if (colType == 'num'){\r\n                            numColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                        } else if (colType == 'txt'){\r\n                            txtColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (numColumnsToInsert.length > 0) {\r\n                    numColumnsToInsert = numColumnsToInsert.join(',')\r\n                    replacedTemplate = this.props.templateToDisplay.replace(numRegex, numColumnsToInsert)\r\n                    \r\n                }\r\n    \r\n                if (txtColumnsToInsert.length > 0) {\r\n                    txtColumnsToInsert = txtColumnsToInsert.join(',')\r\n                    replacedTemplate = this.props.templateToDisplay.replace(txtRegex, numColumnsToInsert)\r\n                    \r\n                }\r\n    \r\n                return (replacedTemplate === this.props.templateToDisplay ? this.markTemplateCode(this.props.templateToDisplay) : this.markTemplateCode(replacedTemplate))\r\n            }\r\n            \r\n            return (\r\n                <React.Fragment>\r\n\r\n                    <a id=\"overall_descrip\"></a>\r\n                    {this.markTemplateCode(this.props.templateToDisplay)}\r\n                </React.Fragment>\r\n            )\r\n\r\n\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    renderParts = (sectionType) => {\r\n        if (this.props.templateChoiceClicked) {\r\n            if (sectionType == 'func'){\r\n                    return <FunctionBreakdownBar />\r\n                    \r\n            } else if ((sectionType == 'vba')) {\r\n                let templateCode = this.parseTemplateCode()\r\n                if ( templateCode != ''){\r\n                    this.validTemplateCode = true\r\n                    return templateCode\r\n                }\r\n            }\r\n\r\n            \r\n        }\r\n        \r\n        if (sectionType == 'vba') {\r\n            return (\r\n                <Alert variant=\"dark\">\r\n                    Click on a template to the left to see its code and function breakdown \r\n                </Alert>\r\n            )\r\n        }\r\n        return null\r\n        \r\n    }\r\n\r\n    triggerUpdate = () => {\r\n        if ((this.codeLoaded == false) && (this.props.templateToDisplay != null) && (this.validTemplateCode)) {\r\n            this.codeLoaded = true\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    render () {\r\n            return (\r\n                <React.Fragment>\r\n                    <Accordion className=\"template-display-inner-cont\">\r\n                        <Accordion.Content className=\"template-code-cont\" active={this.state.activeIndex.includes(1)}>\r\n                            {this.renderParts('vba')}\r\n                                                        \r\n                        </Accordion.Content>\r\n\r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(1)}\r\n                            index={1}\r\n                            className=\"menu-header-h1 menu-choice\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            CODE\r\n                        </Accordion.Title>\r\n\r\n                        <Accordion.Content style={{paddingBottom: '0px'}} active={this.state.activeIndex.includes(0)}>\r\n                            {this.renderParts('func')}\r\n                        </Accordion.Content>\r\n                        \r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(0)}\r\n                            index={0}\r\n                            className=\"menu-header-h1 menu-choice\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            TEMPALTE CODE FUNCTION(S)\r\n                        </Accordion.Title>\r\n                    </Accordion>\r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateCodeInfo: state.templateCodeInfo.template_func_description,\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        highlightCodeSelection: state.funcInfoSelected,\r\n        columnChoices: state.columnChoices,\r\n        templateChoiceClicked: state.templateChoice.templateChoiceClicked,\r\n        templateChoiceID: state.templateChoice.templateID,\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {parseTemplateRequest, parseTemplateOptions}) (templateDisplay)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js",["156","157","158","159","160","161"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {templateFunctionBreakdownSelect} from '../../../actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\n\r\nclass functionBreakdownSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {'functionInfoSelected':'overall_descrip'}\r\n    }\r\n\r\n    funcBreakdownClick = (func_n) => {\r\n        this.props.templateFunctionBreakdownSelect(func_n)\r\n    }\r\n\r\n    onMouseEnter = (e, d) => {\r\n        // this.props.templateFunctionBreakdownSelect({'funcSelected' : e.target.id})\r\n        // this.setState({'functionInfoSelected': e.target.id})\r\n        // this.props.templateFunctionBreakdownSelect(e.target.id)\r\n        console.log('hello')\r\n    }\r\n\r\n    onFuncClick = (e) => {\r\n        this.setState({'functionInfoSelected':e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n        \r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        // this.props.templateFunctionBreakdownSelect(this.state.functionInfoSelected)\r\n        console.log('hello')\r\n    }\r\n\r\n    getFunctionBreakdown = () => {\r\n        if (this.props.templateCodeInfo !=  null) {\r\n\r\n            let split_code;\r\n            let func_name;\r\n            split_code = Object.keys(this.props.templateCodeInfo).map((func_name) => {\r\n                if ((func_name != 'template_code') && (func_name != 'overall_descrip')) {\r\n\r\n                    return (\r\n                        <Link to={this.props.templateChoiceID + \"#\" + func_name}>\r\n                            <p\r\n                            id={func_name}\r\n                            key={func_name}\r\n                            onClick={this.onFuncClick}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseLeave={this.onMouseLeave}\r\n                            className={this.state.functionInfoSelected == func_name ? 'active' : ''}>\r\n                                {func_name}\r\n                            </p>\r\n                        </Link>\r\n                    )\r\n                }\r\n            })\r\n            \r\n            split_code.splice(0, 0,\r\n                <Link to=\"#overall_descrip\">\r\n                    <p \r\n                        id=\"overall_descrip\"\r\n                        key=\"overall_descrip\"\r\n                        onClick={this.onFuncClick}\r\n                        onMouseEnter={this.onMouseEnter}\r\n                        onMouseLeave={this.onMouseLeave}\r\n                        className={this.state.functionInfoSelected == 'overall_descrip' ? 'active' : ''}>\r\n                            Template Code Overview\r\n                    </p>\r\n                </Link>\r\n)\r\n                \r\n            return split_code\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (      \r\n                <div className=\"function-break-down\">\r\n                    {this.getFunctionBreakdown()}\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateCodeInfo: state.templateCodeInfo.template_func_description,\r\n        templateChoiceID: state.templateChoice.templateID,\r\n        funcInfoSelect: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default compose (connect(mapStateToProps, {templateFunctionBreakdownSelect}),\r\n                        withRouter) (functionBreakdownSection)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js",["162","163","164","165","166"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport { parseTemplateOptions, parseTemplateRequest, templateOptionClicked, templateCodeChoice } from '../../../actions/index';\r\nimport { Resizable } from \"re-resizable\";\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nclass templateChoices extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.props.parseTemplateOptions()\r\n        this.state = {\r\n            'accordActiveIndex': []\r\n            // 'accordActiveIndex': []\r\n        }\r\n        this.choiceID=''\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.templateChoices != this.props.templateChoices) {\r\n            this.setState({\r\n                'accordActiveIndex': [...Array(Object.keys(this.props.templateChoices).length).keys()]\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate (){\r\n        // this.props.parseTemplateRequest(this.header, this.template_id)\r\n    }\r\n\r\n    templateChoiceOnClick = (e) => {\r\n        let [header, template_id] = e.target.id.split('-')\r\n        // [this.header, this.template_id] = e.target.id.split('-')\r\n        this.props.parseTemplateRequest(header, template_id)\r\n        this.props.templateCodeChoice(template_id)\r\n        if (!(this.props.templateChoiceClicked)){\r\n            this.props.templateOptionClicked()\r\n        }\r\n    }\r\n\r\n    transformToSubheading = (key) => {\r\n        let subheading = []\r\n        for (let choice of Object.keys(this.props.templateChoices[key])){\r\n            if (choice != \"id\") {\r\n                // this.choiceID = this.props.templateChoices[key][choice]['id']\r\n                subheading.push(\r\n\r\n                    <p key={this.props.templateChoices[key][choice]['id']} \r\n                    \r\n                    onClick={this.templateChoiceOnClick}>\r\n                        <a href={\"#templateCode#\" + this.props.templateChoices[key][choice]['id']}\r\n                        id={this.props.templateChoices[key]['id'] + '-' + this.props.templateChoices[key][choice]['id']}> \r\n                            {choice} \r\n                        </a>\r\n                        \r\n                    </p>\r\n                )\r\n            } \r\n        }\r\n\r\n        return subheading\r\n    }\r\n\r\n    transformToMenu = () => {\r\n        \r\n        let templateChoiceCate = []\r\n        let index = 0\r\n        \r\n        for (let category of Object.keys(this.props.templateChoices)){\r\n            if (category != 'id'){\r\n                templateChoiceCate.push(\r\n                    <React.Fragment>\r\n                        <Accordion.Title\r\n                            active = {this.state.accordActiveIndex.includes(index)}\r\n                            index = {index}\r\n                            onClick = {this.handleAccordOnClick}\r\n                            className = \"menu-header-h1 menu-choice\"\r\n                        >\r\n                        <Icon name='dropdown' />\r\n                            {category.toUpperCase()}\r\n                        </Accordion.Title>\r\n                        <Accordion.Content key={category} active={this.state.accordActiveIndex.includes(index)}>\r\n                            {this.transformToSubheading(category)}\r\n                        </Accordion.Content>\r\n                    </React.Fragment>\r\n                \r\n                )\r\n                index += 1\r\n            }\r\n        }\r\n\r\n        return templateChoiceCate\r\n    }\r\n\r\n    handleAccordOnClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.accordActiveIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ accordActiveIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ accordActiveIndex: activeIndexAry.concat(index) })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n            <Resizable   \r\n                defaultSize={{\r\n                    width:330,\r\n                    height:\"100vh\",\r\n                }}\r\n                className=\"templateChoiceMenu\"\r\n                minWidth=\"330px\"\r\n                maxWidth=\"677px\"\r\n                minHeight=\"100vh\"\r\n                enable={{ top:false, right:true, bottom:false, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\r\n            >\r\n                <Accordion\r\n                    exclusive={false}\r\n                    className=\"menu-choice-header-h1\"\r\n                >\r\n                    {this.transformToMenu()}\r\n                </Accordion>\r\n\r\n            </Resizable>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            templateChoices: state.templateChoice.data,\r\n            templateChoiceClicked: state.templateChoice.templateChoiceClicked\r\n        }\r\n    )\r\n    \r\n}\r\n\r\nexport default connect (mapStateToProps, {templateCodeChoice, parseTemplateOptions, parseTemplateRequest, templateOptionClicked})(templateChoices)\r\n","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateChoiceReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\index.js",["167"],"import React from 'react';\r\nimport TemplateChoices from './template_choices_section/template_choices'\r\nclass templateChoiceSections extends React.Component {\r\n    constructor(props) {\r\n        super (props)\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <TemplateChoices />\r\n        )\r\n    }\r\n}\r\n\r\nexport default templateChoiceSections","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\code_options\\codeOptions.js",["168","169","170"],"import React from 'react';\r\nimport cpIcon from '../../../images/copy_paste_icon.png';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\n\r\nclass codeOptions extends React.Component {\r\n    constructor(props){\r\n        super (props)\r\n        this.state = {\r\n            'code-cp-tooltip-class' : \"code-tooltip hide\",\r\n            'code-function-tooltip-class' : \"code-tooltip hide\",\r\n        }\r\n    }\r\n\r\n    handleMouseHover = (tooltip) => {\r\n        this.setState({\r\n            [tooltip] : \"code-tooltip show\"\r\n        })\r\n    }\r\n\r\n    handleMouseLeave = (tooltip) => {\r\n        this.setState({\r\n            [tooltip] : \"code-tooltip hide\"\r\n        })\r\n    }\r\n\r\n    copyToClipBoard = (mode) => {\r\n        if (mode == 'full') {\r\n            navigator.clipboard.writeText(this.props.templateToDisplay)\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <p topic=\"dq\" className=\"menu-header-h1\">TEMPLATE CODE OPTIONS</p>\r\n                <div className=\"code-option-box\">\r\n                    <div className=\"option-select\">\r\n                        <img onMouseEnter={() => {this.handleMouseHover('code-cp-tooltip-class')}}\r\n                             onMouseLeave={() => {this.handleMouseLeave('code-cp-tooltip-class')}}\r\n                             className=\"cp_all_code\" src={cpIcon}\r\n                             onClick={() => {this.copyToClipBoard('full')}}\r\n                             />\r\n                        <div className={this.state['code-cp-tooltip-class']}>\r\n                            Copy all code\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                        \r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                    \r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                    \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(codeOptions);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\appHeader.js",[],{"ruleId":"171","severity":1,"message":"172","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":23},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"171","severity":1,"message":"179","line":4,"column":7,"nodeType":"173","messageId":"174","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":13,"column":19,"nodeType":"182","messageId":"183","endLine":13,"endColumn":21},{"ruleId":"171","severity":1,"message":"184","line":11,"column":10,"nodeType":"173","messageId":"174","endLine":11,"endColumn":20},{"ruleId":"171","severity":1,"message":"185","line":11,"column":22,"nodeType":"173","messageId":"174","endLine":11,"endColumn":29},{"ruleId":"171","severity":1,"message":"186","line":4,"column":30,"nodeType":"173","messageId":"174","endLine":4,"endColumn":34},{"ruleId":"171","severity":1,"message":"187","line":4,"column":36,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"188","severity":1,"message":"189","line":25,"column":43,"nodeType":"190","messageId":"191","endLine":25,"endColumn":45},{"ruleId":"180","severity":1,"message":"192","line":26,"column":19,"nodeType":"182","messageId":"183","endLine":26,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":36,"column":72,"nodeType":"182","messageId":"183","endLine":36,"endColumn":74},{"ruleId":"180","severity":1,"message":"181","line":42,"column":72,"nodeType":"182","messageId":"183","endLine":42,"endColumn":74},{"ruleId":"180","severity":1,"message":"181","line":49,"column":72,"nodeType":"182","messageId":"183","endLine":49,"endColumn":74},{"ruleId":"180","severity":1,"message":"192","line":66,"column":25,"nodeType":"182","messageId":"183","endLine":66,"endColumn":27},{"ruleId":"171","severity":1,"message":"193","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":6,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":6},{"ruleId":"180","severity":1,"message":"181","line":12,"column":41,"nodeType":"182","messageId":"183","endLine":12,"endColumn":43},{"ruleId":"180","severity":1,"message":"181","line":22,"column":57,"nodeType":"182","messageId":"183","endLine":22,"endColumn":59},{"ruleId":"171","severity":1,"message":"198","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":12},{"ruleId":"180","severity":1,"message":"181","line":65,"column":51,"nodeType":"182","messageId":"183","endLine":65,"endColumn":53},{"ruleId":"188","severity":1,"message":"189","line":80,"column":45,"nodeType":"190","messageId":"191","endLine":80,"endColumn":47},{"ruleId":"180","severity":1,"message":"192","line":81,"column":36,"nodeType":"182","messageId":"183","endLine":81,"endColumn":38},{"ruleId":"199","severity":1,"message":"200","line":94,"column":41,"nodeType":"201","endLine":94,"endColumn":106},{"ruleId":"202","severity":1,"message":"203","line":94,"column":41,"nodeType":"201","endLine":94,"endColumn":106},{"ruleId":"180","severity":1,"message":"192","line":123,"column":33,"nodeType":"182","messageId":"183","endLine":123,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":124,"column":37,"nodeType":"182","messageId":"183","endLine":124,"endColumn":39},{"ruleId":"180","severity":1,"message":"181","line":126,"column":44,"nodeType":"182","messageId":"183","endLine":126,"endColumn":46},{"ruleId":"199","severity":1,"message":"200","line":150,"column":21,"nodeType":"201","endLine":150,"endColumn":45},{"ruleId":"202","severity":1,"message":"203","line":150,"column":21,"nodeType":"201","endLine":150,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":163,"column":29,"nodeType":"182","messageId":"183","endLine":163,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":166,"column":37,"nodeType":"182","messageId":"183","endLine":166,"endColumn":39},{"ruleId":"180","severity":1,"message":"192","line":168,"column":35,"nodeType":"182","messageId":"183","endLine":168,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":177,"column":25,"nodeType":"182","messageId":"183","endLine":177,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":189,"column":30,"nodeType":"182","messageId":"183","endLine":189,"endColumn":32},{"ruleId":"171","severity":1,"message":"204","line":41,"column":17,"nodeType":"173","messageId":"174","endLine":41,"endColumn":26},{"ruleId":"188","severity":1,"message":"189","line":42,"column":83,"nodeType":"190","messageId":"191","endLine":42,"endColumn":85},{"ruleId":"180","severity":1,"message":"192","line":43,"column":32,"nodeType":"182","messageId":"183","endLine":43,"endColumn":34},{"ruleId":"180","severity":1,"message":"192","line":43,"column":66,"nodeType":"182","messageId":"183","endLine":43,"endColumn":68},{"ruleId":"180","severity":1,"message":"181","line":53,"column":72,"nodeType":"182","messageId":"183","endLine":53,"endColumn":74},{"ruleId":"180","severity":1,"message":"181","line":69,"column":68,"nodeType":"182","messageId":"183","endLine":69,"endColumn":70},{"ruleId":"171","severity":1,"message":"205","line":6,"column":22,"nodeType":"173","messageId":"174","endLine":6,"endColumn":26},{"ruleId":"180","severity":1,"message":"192","line":20,"column":39,"nodeType":"182","messageId":"183","endLine":20,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":27,"column":5,"nodeType":"196","messageId":"183","endLine":29,"endColumn":6},{"ruleId":"180","severity":1,"message":"192","line":44,"column":24,"nodeType":"182","messageId":"183","endLine":44,"endColumn":26},{"ruleId":"180","severity":1,"message":"192","line":70,"column":26,"nodeType":"182","messageId":"183","endLine":70,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":4,"column":5,"nodeType":"196","messageId":"197","endLine":7,"endColumn":6},{"ruleId":"171","severity":1,"message":"208","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":28,"column":18,"nodeType":"182","messageId":"183","endLine":28,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":39,"column":25,"nodeType":"201","endLine":43,"endColumn":32},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["211"],"no-negated-in-lhs",["212"],"'INITIAL_STATE' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'HashRouter' is defined but never used.","'NavLink' is defined but never used.","'Menu' is defined but never used.","'Radio' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'connect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'hljs' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'func_name' is defined but never used.","'Link' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]