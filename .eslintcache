[{"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js":"1","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js":"2","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js":"3","A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js":"4","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js":"5","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js":"6","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js":"7","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js":"8","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js":"9","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js":"10","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js":"11","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js":"12","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js":"13","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js":"14","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js":"15","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\index.js":"16","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\code_options\\codeOptions.js":"17","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\appHeader.js":"18","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplayTest.js":"19","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\about_page\\index.js":"20","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\index.js":"21","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\vaultBuilderReducer.js":"22","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\menuConstructor.js":"23","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\templateDisplayConstructor.js":"24","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\appStateReducer.js":"25","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\templateInputArea.js":"26","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\informationBoxContainer.js":"27"},{"size":725,"mtime":1616889814905,"results":"28","hashOfConfig":"29"},{"size":472,"mtime":1616890898612,"results":"30","hashOfConfig":"29"},{"size":4510,"mtime":1616975056898,"results":"31","hashOfConfig":"29"},{"size":102,"mtime":1609641603356,"results":"32","hashOfConfig":"29"},{"size":456,"mtime":1613251338984,"results":"33","hashOfConfig":"29"},{"size":1349,"mtime":1616814179937,"results":"34","hashOfConfig":"29"},{"size":3827,"mtime":1614223399014,"results":"35","hashOfConfig":"29"},{"size":1942,"mtime":1613277794107,"results":"36","hashOfConfig":"29"},{"size":3731,"mtime":1614224068643,"results":"37","hashOfConfig":"29"},{"size":418,"mtime":1613280220450,"results":"38","hashOfConfig":"29"},{"size":1628,"mtime":1614917662144,"results":"39","hashOfConfig":"29"},{"size":1238,"mtime":1615350286928,"results":"40","hashOfConfig":"29"},{"size":10487,"mtime":1615692264323,"results":"41","hashOfConfig":"29"},{"size":3604,"mtime":1615684846257,"results":"42","hashOfConfig":"29"},{"size":5026,"mtime":1616890132364,"results":"43","hashOfConfig":"29"},{"size":347,"mtime":1613621418579,"results":"44","hashOfConfig":"29"},{"size":5180,"mtime":1614924708984,"results":"45","hashOfConfig":"29"},{"size":2774,"mtime":1616965574259,"results":"46","hashOfConfig":"29"},{"size":1509,"mtime":1614917662144,"results":"47","hashOfConfig":"29"},{"size":2347,"mtime":1615524820446,"results":"48","hashOfConfig":"29"},{"size":3218,"mtime":1616975355696,"results":"49","hashOfConfig":"29"},{"size":862,"mtime":1616967491880,"results":"50","hashOfConfig":"29"},{"size":6642,"mtime":1616975188464,"results":"51","hashOfConfig":"29"},{"size":8404,"mtime":1616975118642,"results":"52","hashOfConfig":"29"},{"size":1216,"mtime":1616811960053,"results":"53","hashOfConfig":"29"},{"size":3923,"mtime":1616963100187,"results":"54","hashOfConfig":"29"},{"size":2194,"mtime":1616553075824,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"mfu6s6",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"59"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"59"},"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js",["130"],"import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport AppHeader from '../src/components/mainAppLayout/appHeader'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)))\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <AppHeader />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'))\r\n\r\n",["131","132"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js",["133","134"],"// import { fromPairs } from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { parseTemplateOptions } from '../../actions/index';\r\nimport 'highlight.js/styles/github.css';\r\nimport TemplateDisplay from '../comp2_template_display_area/templateDisplay';\r\nimport ConfigInfoBox from '../comp3_config_info_box'\r\nimport TemplateChoicesBox from '../comp1_template_choices'\r\n\r\n\r\n// console.log(hljs)\r\n\r\n\r\nconst nodeChoiceRenderMap = {\r\n    'dq': [{abbrev:'dqNum', full:'Numeric DQ Report'}, {abbrev:'dqCate', full:'Categorical DQ Report'}],\r\n    'columnModify': [{abbrev:'colMod', full:'Column Modify Filler'}],\r\n    'about': [{abbrev:'about', full:'about Filler'}]\r\n};\r\n\r\nclass MainMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"main-app-layout-defunct\">\r\n                    <TemplateChoicesBox />\r\n                    <TemplateDisplay templateid={this.props.match.params.id}/>\r\n                    <ConfigInfoBox />\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        mainFlowNodes: state.mainFlowNodes,\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { parseTemplateOptions })(MainMenu);",["135","136"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js",["137","138","139","140","141","142","143","144"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Dropdown, Checkbox, Menu, Radio } from 'semantic-ui-react';\r\nimport { columnTypeChanged, toggleInsertColumn } from '../../../../actions'\r\n\r\nclass currentColumnList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {colTypeMap: {\r\n            'na': 'Do not use',\r\n            'num': 'Numeric',\r\n            'txt': 'Text'\r\n        }}\r\n    }\r\n\r\n    newTypePicked = (e, data) => {\r\n        let tmp_type = {}\r\n        tmp_type[data.target_col] = data.value\r\n        this.props.columnTypeChanged(tmp_type)\r\n    }\r\n    \r\n    getColumnChoices = () => {\r\n        let cols = _.keys(this.props.columnChoices)\r\n        let columnDropDown = cols.map((e) => {\r\n            if (e != 'insertColumnFlag') {\r\n                return (\r\n                    <div className=\"column_choices_list\">\r\n                        <p>{e}</p>\r\n                        <div className='drop-down-cont'>\r\n                            <Dropdown\r\n                                options = {[{\r\n                                    key: {e} + 'na',\r\n                                    text:\"Do not use\",\r\n                                    value:'na',\r\n                                    active:this.props.columnChoices[e] == 'na'\r\n                                },\r\n                                {\r\n                                    key: {e} + 'num',\r\n                                    text:\"Numeric\",\r\n                                    value:'num',\r\n                                    active:this.props.columnChoices[e] == 'num',\r\n                                    \r\n                                },\r\n                                {\r\n                                    key: {e} + 'txt',\r\n                                    text:\"Text\",\r\n                                    value:'txt',\r\n                                    active:this.props.columnChoices[e] == 'txt'\r\n                                }]}\r\n\r\n                                text = {this.state.colTypeMap[this.props.columnChoices[e]]}\r\n                                target_col = {e}\r\n                                onChange = {this.newTypePicked}\r\n                                className = \"column-picker\"\r\n                            >\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                    </div> \r\n                )\r\n            }\r\n\r\n        })\r\n\r\n        if (cols.length != 1) {\r\n            columnDropDown.unshift(                \r\n                <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                    className=\"insert_checkbox\"\r\n                />\r\n            )\r\n        }\r\n\r\n        return columnDropDown\r\n    }\r\n\r\n    toggleInsertColumn = (e, data) => {\r\n        if (data.checked) {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':true})\r\n        } else {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':false})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                {/* <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                    className=\"insert_checkbox\"\r\n                /> */}\r\n                {this.getColumnChoices()}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'columnChoices': state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { toggleInsertColumn, columnTypeChanged } )(currentColumnList)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js",["145"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport TemplateDescription from './template_description_sections/template_description'\r\n\r\nclass templateDescriptionSection extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <TemplateDescription />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default templateDescriptionSection","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js",["146","147","148"],"\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass templateDescription extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    displayHeading = () => {\r\n        if (this.props.selectedFuncInfo == 'overall_descrip'){\r\n            return \"ABOUT THIS TEMPLATE\"\r\n        } else {\r\n            return \"ABOUT THIS FUNCTION\"\r\n        }\r\n    }\r\n\r\n    renderTemplateDescrip = () => {\r\n        if (this.props.funcDescrip != null) {\r\n            let descripHeader\r\n            descripHeader = this.props.selectedFuncInfo == 'overall_descrip' ? \"Overall Template Description\" :  this.props.selectedFuncInfo\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"descrip-header\">{descripHeader}</p>\r\n                    <p className=\"descrip-txt\">\r\n                        {this.props.funcDescrip[this.props.selectedFuncInfo]}\r\n                    </p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.props.funcDescrip != null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p topic=\"dq\" className=\"menu-header-h1\">{this.displayHeading()}</p>\r\n                    {this.renderTemplateDescrip()}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        funcDescrip : state.templateCodeInfo.template_func_description,\r\n        selectedFuncInfo: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(templateDescription)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplay.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { parseTemplateRequest, parseTemplateOptions, selectedFuncBlock } from '../../actions/index';\r\nimport FunctionBreakdownBar from './template_display_sections/functionBreakdown';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport hljs from 'highlight.js';\r\n// import hljsVba from 'highlight.js/lib/vba';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nclass templateDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {activeIndex: [0,1], syntaxHighlighted: false}\r\n        this.codeLoaded = false\r\n        this.validTemplateCode = false\r\n    }\r\n\r\n    componentDidMount () {\r\n        // case when going to the url directly\r\n        if (!(this.props.templateChoiceClicked)){\r\n            let templateUrlPart = window.location.href.split('home/')\r\n            if (templateUrlPart[1] != \"\") {\r\n\r\n                if (templateUrlPart[1].includes(\"#\")) {\r\n                    templateUrlPart = templateUrlPart[1].split('#')[0]\r\n                    templateUrlPart = templateUrlPart.split('/')\r\n                } else {\r\n                    templateUrlPart = templateUrlPart[1].split('/')\r\n                }\r\n                this.props.parseTemplateRequest(templateUrlPart[0], templateUrlPart[1])\r\n                this.codeLoaded = true\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (this.props.templateChoiceClicked){\r\n            if (prevProps.templateChoiceID != this.props.templateChoiceID){\r\n                this.props.parseTemplateRequest(this.props.templateHeaderID, this.props.templateChoiceID)\r\n            }\r\n        }\r\n\r\n        // this.codeLoaded = true\r\n    }\r\n\r\n    handleTitleClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.activeIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ activeIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ activeIndex: activeIndexAry.concat(index) })\r\n        }\r\n\r\n    }\r\n\r\n    getHighlightStatus = (capture) => {\r\n        if (this.props.highlightCodeSelection.includes(capture)) {\r\n            return 'section'\r\n        }\r\n        \r\n        return ''\r\n    }\r\n\r\n    isSectionSelected = (funcBlock) => {\r\n        let captureRegexFunc = /Function (\\w+)/\r\n        let captureRegexSub = /Sub (\\w+)/\r\n        let capture\r\n\r\n        if (funcBlock.match(captureRegexFunc)) {\r\n                capture = funcBlock.match(captureRegexFunc)\r\n            }\r\n        else {\r\n                capture = funcBlock.match(captureRegexSub)\r\n            }\r\n        \r\n\r\n        if (capture != null) {\r\n            capture = capture[1]\r\n            if (this.props.highlightCodeSelection == capture) {\r\n                this.props.selectedFuncBlock(funcBlock)\r\n                return 'codeDiv highlighted'\r\n            }\r\n        }\r\n\r\n        return 'codeDiv'\r\n        \r\n    }\r\n\r\n    markTemplateCode = (templateCodeToSplit) => {\r\n        // backend can handle the relationship of function_name : function Code\r\n        let [split_code_sub, split_code_func] = templateCodeToSplit.split(new RegExp('end sub', 'i'))\r\n        split_code_func = split_code_func != null ? split_code_func.split(new RegExp('end function', 'i')) : ''\r\n        let split_code = [split_code_sub, ...split_code_func]\r\n        let functionIdAry = Object.keys(this.props.templateCodeInfo)\r\n        functionIdAry.splice(functionIdAry.indexOf('overall_descrip'), 1) //Takes away the <OVERALL_DESCRIP> tag\r\n        let code = split_code.map((el, ind) => {\r\n                            if (el != '') {\r\n                                // detect if it's a sub or function\r\n                                let capture_regex_sub = /sub (\\w+)/\r\n                                let codeSection \r\n                                if (el.toLowerCase().match(capture_regex_sub)){\r\n                                    codeSection = el.trim() + \"\\nEnd Sub\"     \r\n                                } else {\r\n                                    codeSection = el.trim() + \"\\nEnd Function\"    \r\n                                }\r\n\r\n                                return (\r\n                                    <React.Fragment>\r\n                                    \r\n                                        <a id = {functionIdAry[ind]}></a>\r\n                                        <div className={this.isSectionSelected(codeSection)}>\r\n                                            \r\n                                            <SyntaxHighlighter language='vba'>\r\n                                                {codeSection}                                                \r\n                                            </SyntaxHighlighter>\r\n                                        </div>\r\n                                        \r\n                                    </React.Fragment>\r\n    \r\n                                )\r\n                            }\r\n\r\n                        }\r\n                    )\r\n\r\n        return code\r\n    }\r\n\r\n    parseTemplateCode = () => {\r\n        if (this.props.templateToDisplay != null) {\r\n            let numColumnsToInsert = []\r\n            let txtColumnsToInsert = []\r\n            let numRegex = /<jsNumParse>/\r\n            let txtRegex = /<jsTxtParse>/\r\n            if (this.props.columnChoices.insertColumnFlag) {\r\n                let replacedTemplate\r\n    \r\n                for (let [colName, colType] of Object.entries(this.props.columnChoices)){\r\n                    if (colName != 'insertColumnFlag'){\r\n                        if (colType == 'num'){\r\n                            numColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                        } else if (colType == 'txt'){\r\n                            txtColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (numColumnsToInsert.length > 0) {\r\n                    numColumnsToInsert = numColumnsToInsert.join(',')\r\n                    replacedTemplate = this.props.templateToDisplay.replace(numRegex, numColumnsToInsert)\r\n                    \r\n                }\r\n    \r\n                if (txtColumnsToInsert.length > 0) {\r\n                    txtColumnsToInsert = txtColumnsToInsert.join(',')\r\n                    replacedTemplate = this.props.templateToDisplay.replace(txtRegex, numColumnsToInsert)\r\n                    \r\n                }\r\n    \r\n                return (replacedTemplate === this.props.templateToDisplay ? this.markTemplateCode(this.props.templateToDisplay) : this.markTemplateCode(replacedTemplate))\r\n            }\r\n            \r\n            return (\r\n                <React.Fragment>\r\n\r\n                    <a id=\"overall_descrip\"></a>\r\n                    {this.markTemplateCode(this.props.templateToDisplay)}\r\n                </React.Fragment>\r\n            )\r\n\r\n\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    renderParts = (sectionType) => {\r\n        if (this.props.templateChoiceClicked || this.codeLoaded) {\r\n            // if (!(this.codeLoaded)){\r\n            //     this.props.parseTemplateRequest(this.props.templateHeaderID, this.props.templateChoiceID)\r\n            // }\r\n            // this.codeLoaded = true\r\n            if (sectionType == 'func'){\r\n                    return <FunctionBreakdownBar />\r\n                    \r\n            } else if ((sectionType == 'vba')) {\r\n                let templateCode = this.parseTemplateCode()\r\n                if ( templateCode != ''){\r\n                    this.validTemplateCode = true\r\n                    \r\n                    return templateCode\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (sectionType == 'vba') {\r\n            return (\r\n                <Alert variant=\"dark\">\r\n                    Click on a template to the left to see its code and function breakdown \r\n                </Alert>\r\n            )\r\n        }\r\n        return null\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"macro-generator-container\">\r\n\r\n                <Accordion className=\"template-display-inner-cont\">\r\n                    <Accordion.Content className=\"template-code-cont\" active={this.state.activeIndex.includes(1)}>\r\n                        {this.renderParts('vba')}\r\n                                                    \r\n                    </Accordion.Content>\r\n\r\n                    <Accordion.Title\r\n                        onClick={this.handleTitleClick}\r\n                        active={this.state.activeIndex.includes(1)}\r\n                        index={1}\r\n                        className=\"menu-header-h1 menu-choice\"\r\n                    >\r\n                        <Icon name='dropdown' />\r\n                        CODE\r\n                    </Accordion.Title>\r\n\r\n                    <Accordion.Content style={{paddingBottom: '0px'}} active={this.state.activeIndex.includes(0)}>\r\n                        {this.renderParts('func')}\r\n                    </Accordion.Content>\r\n                    \r\n                    <Accordion.Title\r\n                        onClick={this.handleTitleClick}\r\n                        active={this.state.activeIndex.includes(0)}\r\n                        index={0}\r\n                        className=\"menu-header-h1 menu-choice\"\r\n                    >\r\n                        <Icon name='dropdown' />\r\n                        TEMPALTE CODE FUNCTION(S)\r\n                    </Accordion.Title>\r\n                </Accordion>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateCodeInfo: state.templateCodeInfo.template_func_description,\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        highlightCodeSelection: state.funcInfoSelected.funcTitle,\r\n        columnChoices: state.columnChoices,\r\n        templateChoiceClicked: state.templateChoice.templateChoiceClicked,\r\n        templateChoiceID: state.templateChoice.templateID,\r\n        templateHeaderID: state.templateChoice.headerID\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {selectedFuncBlock, parseTemplateRequest, parseTemplateOptions}) (templateDisplay)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\template_display_sections\\functionBreakdown.js",["166","167","168","169","170","171"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {templateFunctionBreakdownSelect} from '../../../actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\n\r\nclass functionBreakdownSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {'functionInfoSelected':'overall_descrip'}\r\n    }\r\n\r\n    funcBreakdownClick = (func_n) => {\r\n        this.props.templateFunctionBreakdownSelect(func_n)\r\n    }\r\n\r\n    onMouseEnter = (e, d) => {\r\n        // this.props.templateFunctionBreakdownSelect({'funcSelected' : e.target.id})\r\n        // this.setState({'functionInfoSelected': e.target.id})\r\n        // this.props.templateFunctionBreakdownSelect(e.target.id)\r\n        console.log('hello')\r\n    }\r\n\r\n    onFuncClick = (e) => {\r\n        this.setState({'functionInfoSelected':e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n        \r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        // this.props.templateFunctionBreakdownSelect(this.state.functionInfoSelected)\r\n        console.log('hello')\r\n    }\r\n\r\n    getFunctionBreakdown = () => {\r\n        if (this.props.templateCodeInfo !=  null) {\r\n\r\n            let split_code;\r\n            let func_name;\r\n            \r\n            split_code = Object.keys(this.props.templateCodeInfo).map((func_name) => {\r\n                console.log(\"THINK:\", this.props.templateCodeInfo)\r\n                if ((func_name != 'template_code') && (func_name != 'overall_descrip')) {\r\n\r\n                    return (\r\n                        <Link to={this.props.templateChoiceID + \"#\" + func_name}>\r\n                            <p\r\n                            id={func_name}\r\n                            key={func_name}\r\n                            onClick={this.onFuncClick}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseLeave={this.onMouseLeave}\r\n                            className={this.state.functionInfoSelected == func_name ? 'active' : ''}>\r\n                                {func_name}\r\n                            </p>\r\n                        </Link>\r\n                    )\r\n                }\r\n            })\r\n            \r\n            // Gets the <OVERALL_DESCRIP> Tag\r\n            split_code.splice(0, 0,\r\n                <Link to=\"#overall_descrip\">\r\n                    <p \r\n                        id=\"overall_descrip\"\r\n                        key=\"overall_descrip\"\r\n                        onClick={this.onFuncClick}\r\n                        onMouseEnter={this.onMouseEnter}\r\n                        onMouseLeave={this.onMouseLeave}\r\n                        className={this.state.functionInfoSelected == 'overall_descrip' ? 'active' : ''}>\r\n                            Template Code Overview\r\n                    </p>\r\n                </Link>\r\n)\r\n                \r\n            return split_code\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (      \r\n                <div className=\"function-break-down\">\r\n                    {this.getFunctionBreakdown()}\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateCodeInfo: state.templateCodeInfo.template_func_description,\r\n        templateChoiceID: state.templateChoice.templateID,\r\n        funcInfoSelect: state.funcInfoSelected.funcTitle\r\n    })\r\n}\r\n\r\nexport default compose (connect(mapStateToProps, {templateFunctionBreakdownSelect}),\r\n                        withRouter) (functionBreakdownSection)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\template_choices_section\\template_choices.js",["172","173","174"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport { parseTemplateOptions, parseTemplateRequest, templateOptionClicked, templateCodeChoice } from '../../../actions/index';\r\nimport { Resizable } from \"re-resizable\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass templateChoices extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.props.parseTemplateOptions()\r\n        this.state = {\r\n            'accordActiveIndex': []\r\n        }\r\n        this.choiceID=''\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.templateChoices != this.props.templateChoices) {\r\n            this.setState({\r\n                'accordActiveIndex': [...Array(Object.keys(this.props.templateChoices).length).keys()]\r\n            })\r\n        }\r\n    }\r\n\r\n    templateChoiceOnClick = (e) => {\r\n        let [header, template_id] = e.target.id.split('-')\r\n        // [this.header, this.template_id] = e.target.id.split('-')\r\n        // this.props.parseTemplateRequest(header, template_id)\r\n        this.props.templateCodeChoice(header, template_id)\r\n        if (!(this.props.templateChoiceClicked)){\r\n            this.props.templateOptionClicked()\r\n        }\r\n    }\r\n\r\n    transformToSubheading = (key) => {\r\n        let subheading = []\r\n        for (let choice of Object.keys(this.props.templateChoices[key])){\r\n            if (choice != \"id\") {\r\n                // this.choiceID = this.props.templateChoices[key][choice]['id']\r\n                subheading.push(\r\n\r\n                    <p key={this.props.templateChoices[key][choice]['id']} \r\n                    \r\n                    onClick={this.templateChoiceOnClick}>\r\n                        <Link to = { \"/home/\" + this.props.templateChoices[key]['id'] + \"/\" + this.props.templateChoices[key][choice]['id']}\r\n                        id={this.props.templateChoices[key]['id'] + '-' + this.props.templateChoices[key][choice]['id']}> \r\n                            {choice} \r\n                        </Link>\r\n                        \r\n                    </p>\r\n                )\r\n            } \r\n        }\r\n\r\n        return subheading\r\n    }\r\n\r\n    transformToMenu = () => {\r\n        \r\n        let templateChoiceCate = []\r\n        let index = 0\r\n        \r\n        for (let category of Object.keys(this.props.templateChoices)){\r\n            if (category != 'id'){\r\n                templateChoiceCate.push(\r\n                    <React.Fragment>\r\n                        <Accordion.Title\r\n                            active = {this.state.accordActiveIndex.includes(index)}\r\n                            index = {index}\r\n                            onClick = {this.handleAccordOnClick}\r\n                            className = \"menu-header-h1 menu-choice\"\r\n                        >\r\n                        <Icon name='dropdown' />\r\n                            {category.toUpperCase()}\r\n                        </Accordion.Title>\r\n                        <Accordion.Content key={category} active={this.state.accordActiveIndex.includes(index)}>\r\n                            {this.transformToSubheading(category)}\r\n                        </Accordion.Content>\r\n                    </React.Fragment>\r\n                \r\n                )\r\n                index += 1\r\n            }\r\n        }\r\n\r\n        return templateChoiceCate\r\n    }\r\n\r\n    handleAccordOnClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.accordActiveIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ accordActiveIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ accordActiveIndex: activeIndexAry.concat(index) })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n            <Resizable   \r\n                defaultSize={{\r\n                    width:344,\r\n                    height:\"calc(100vh - 44px)\",\r\n                }}\r\n                className=\"templateChoiceMenu\"\r\n                minWidth=\"330px\"\r\n                maxWidth=\"677px\"\r\n                enable={{ top:false, right:true, bottom:false, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\r\n            >\r\n                <Accordion\r\n                    exclusive={false}\r\n                    className=\"menu-choice-header-h1\"\r\n                >\r\n                    {this.transformToMenu()}\r\n                </Accordion>\r\n\r\n            </Resizable>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            templateChoices: state.templateChoice.data,\r\n            templateChoiceClicked: state.templateChoice.templateChoiceClicked\r\n        }\r\n    )\r\n    \r\n}\r\n\r\nexport default connect (mapStateToProps, {templateCodeChoice, parseTemplateOptions, parseTemplateRequest, templateOptionClicked})(templateChoices)\r\n","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_choices\\index.js",["175"],"import React from 'react';\r\nimport TemplateChoices from './template_choices_section/template_choices'\r\nclass templateChoiceSections extends React.Component {\r\n    constructor(props) {\r\n        super (props)\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <TemplateChoices />\r\n        )\r\n    }\r\n}\r\n\r\nexport default templateChoiceSections","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\code_options\\codeOptions.js",["176","177","178","179","180","181","182","183","184","185","186"],"import React from 'react';\r\nimport cpIcon from '../../../images/copy_paste_icon.png';\r\nimport cpSectionIcon from '../../../images/copy_paste_section.png';\r\nimport cpLinkIcon from '../../../images/copy_link.png'\r\nimport likeIcon from '../../../images/like_icon.png'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass codeOptions extends React.Component {\r\n    constructor(props){\r\n        super (props)\r\n        this.state = {\r\n            'code-cp-tooltip-class' : \"code-tooltip hide\",\r\n            'code-function-tooltip-class' : \"code-tooltip hide\",\r\n            'code-link-tooltip-class': \"code-tooltip hide\"\r\n        }\r\n    }\r\n\r\n    handleMouseHover = (tooltip) => {\r\n        this.setState({\r\n            [tooltip] : \"code-tooltip show\"\r\n        })\r\n    }\r\n\r\n    handleMouseLeave = (tooltip) => {\r\n        this.setState({\r\n            [tooltip] : \"code-tooltip hide\"\r\n        })\r\n    }\r\n\r\n    copyToClipBoard = (mode) => {\r\n        if (mode == 'code-cp-tooltip-class') {\r\n            navigator.clipboard.writeText(this.props.templateToDisplay)\r\n            this.setState({[mode]: \"code-tooltip clicked\"})\r\n        } else if (mode == 'code-function-tooltip-class') {\r\n            navigator.clipboard.writeText(this.props.funcBlockToCopy)\r\n            this.setState({[mode]: \"code-tooltip clicked\"})\r\n        } else if (mode == 'code-link-tooltip-class'){\r\n            let link = window.location.href\r\n            if (link.includes(\"#\")){\r\n                link = link.split(\"#\")[0]\r\n            }\r\n\r\n            navigator.clipboard.writeText(link)\r\n            this.setState({[mode]: \"code-tooltip clicked\"})\r\n        }\r\n    }\r\n\r\n    optnStringRender = (optnClass) => {\r\n        if (this.state[optnClass].includes('clicked')){\r\n            return \"Copied!\"\r\n        } else if (optnClass == 'code-cp-tooltip-class') {\r\n            return \"Copy all code\"\r\n        } else if (optnClass == 'code-function-tooltip-class') {\r\n            return \"Copy code section\"\r\n        } else if (optnClass == 'code-link-tooltip-class') {\r\n            return \"Copy code link\"\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <p topic=\"dq\" className=\"menu-header-h1\">TEMPLATE CODE OPTIONS</p>\r\n                <div className=\"code-option-box\">\r\n                    <div className=\"option-select\">\r\n                        <img onMouseEnter={() => {this.handleMouseHover('code-cp-tooltip-class')}}\r\n                             onMouseLeave={() => {this.handleMouseLeave('code-cp-tooltip-class')}}\r\n                             src={cpIcon}\r\n                             onClick={(e) => {this.copyToClipBoard('code-cp-tooltip-class')}}\r\n                        />\r\n                        <div className={this.state['code-cp-tooltip-class']}>\r\n                            {this.optnStringRender('code-cp-tooltip-class')}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                        <img onMouseEnter={() => {this.handleMouseHover('code-function-tooltip-class')}}\r\n                             onMouseLeave={() => {this.handleMouseLeave('code-function-tooltip-class')}}\r\n                             src={cpSectionIcon}\r\n                             onClick={() => {this.copyToClipBoard('code-function-tooltip-class')}}\r\n                        />\r\n                        <div className={this.state['code-function-tooltip-class']}>\r\n                            {this.optnStringRender('code-function-tooltip-class')}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                        <img onMouseEnter={() => {this.handleMouseHover('code-link-tooltip-class')}}\r\n                             onMouseLeave={() => {this.handleMouseLeave('code-link-tooltip-class')}}\r\n                             onClick={() => {this.copyToClipBoard('code-link-tooltip-class')}}\r\n                             src={cpLinkIcon}\r\n                        />\r\n                        <div className={this.state['code-link-tooltip-class']}>\r\n                            {this.optnStringRender('code-link-tooltip-class')}\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <div className=\"option-select\">\r\n                        <img onMouseEnter={() => {this.handleMouseHover('code-link-tooltip-class')}}\r\n                                onMouseLeave={() => {this.handleMouseLeave('code-link-tooltip-class')}}\r\n                                className=\"cp_all_code\" src={likeIcon}\r\n                        />\r\n\r\n                        <div className={this.state['code-link-tooltip-class']}>\r\n                            This is cool!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        funcBlockToCopy: state.funcInfoSelected.funcBlock\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(codeOptions);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\appHeader.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp2_template_display_area\\templateDisplayTest.js",["187","188","189","190","191","192","193"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap'\r\nimport { parseTemplateRequest, parseTemplateOptions } from '../../actions/index';\r\nimport FunctionBreakdownBar from './template_display_sections/functionBreakdown';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport hljs from 'highlight.js';\r\n// import hljsVba from 'highlight.js/lib/vba';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nclass templateDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    render () {\r\n        console.log('the template id is ', this.props.templateid)\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"macro-generator-container\">\r\n                    hello\r\n                    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateCodeInfo: state.templateCodeInfo.template_func_description,\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        highlightCodeSelection: state.funcInfoSelected,\r\n        columnChoices: state.columnChoices,\r\n        templateChoiceClicked: state.templateChoice.templateChoiceClicked,\r\n        templateChoiceID: state.templateChoice.templateID,\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {parseTemplateRequest, parseTemplateOptions}) (templateDisplay)",["194","195"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\about_page\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\index.js",["196","197","198","199","200","201","202","203"],"import React, { useEffect, useState } from 'react';\r\nimport { setVaultID, vaultViewSwitch, vaultMenuClickParse, vaultMenuParseMenuItem, vaultTagValueParse } from '../../actions';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport parseRequestAxio from '../../apis/parseRequest';\r\nimport VaultMenu from './vault_constructors/menuConstructor'\r\nimport TemplateDisplay from './vault_constructors/templateDisplayConstructor'\r\nimport InformationBoxContainer from './vault_constructors/informationBoxContainer'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\nimport TemplateInputArea from './vault_constructors/templateInputArea';\r\n\r\nconst CustomVaultBuild = (props) => {\r\n    let history = useHistory();\r\n    const [vaultidloaded, setvaultidloaded] = useState(false)\r\n\r\n    function makeid(length) {\r\n        var result           = '';\r\n        var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log('create_vault useeffect rendered')\r\n        console.log('this is the vaultID: ', props.vaultid)\r\n        let vaultIDExtract = /(?<=\\/vaultID\\/)(.{8})(?=\\/)|(?<=\\/vaultID\\/)(.{8})/\r\n        let vaultIDCapture = window.location.href.match(vaultIDExtract)\r\n        \r\n        if ((vaultIDCapture === null) && (props.vaultid === '')) {\r\n            let uniqueID = makeid(8)\r\n            history.push('/vaultID/' + uniqueID)\r\n            props.setVaultID(uniqueID)\r\n        } else {\r\n            if (props.vaultID !== vaultIDCapture[0]) {\r\n                props.setVaultID(vaultIDCapture[0])\r\n                if (props.match.params.templateid){\r\n                    console.log('vault tag value parse runs here')\r\n                    props.vaultMenuParseMenuItem(props.match.params.templateid)\r\n                    props.vaultTagValueParse(vaultIDCapture[0], props.match.params.templateid)\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        // setvaultidloaded(true)\r\n    }, [props.vaultid])\r\n\r\n    const templateDisplay = () => {\r\n        if (!(props.viewerMode)) {\r\n            return (\r\n                <TemplateDisplay/>\r\n            )\r\n        } else if (props.viewerMode) {\r\n            return <TemplateInputArea />\r\n        }\r\n    }\r\n\r\n    if (props.vaultid != '') {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"main-app-layout\">\r\n                    <VaultMenu />\r\n                    {templateDisplay()}\r\n                    <InformationBoxContainer />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        vaultid : state.appState['vaultid'],\r\n        viewerMode : state.appState['viewerMode']\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setVaultID, vaultMenuParseMenuItem, vaultTagValueParse, vaultMenuClickParse, vaultViewSwitch })(CustomVaultBuild);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\vaultBuilderReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\menuConstructor.js",["204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Resizable } from \"re-resizable\";\r\nimport { vaultMenuParseMenuItem, vaultGetMenuStruct, vaultTagValueParse, vaultMenuClickParse, vaultMenuClickFlag, vaultViewSwitch } from '../../../actions'\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Switch from \"react-switch\";\r\n\r\nconst VaultMenu = (props) => {\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect (\r\n        () => {\r\n            console.log('initial menu constructor get request. vaultid ', props.vaultid)\r\n            props.vaultGetMenuStruct(props.vaultid)\r\n        }\r\n    , [props.templateCodeFlag])\r\n\r\n    useEffect (\r\n        // checks whether the vault id already exists\r\n        () => {\r\n            console.log('menuOptoin switched')\r\n            if (Object.keys(props.menuOptions).length > 0) {\r\n                if (props.templateCodeFlag !== '') {\r\n                    props.vaultViewSwitch(true)\r\n                } else {\r\n                    props.vaultViewSwitch(false)\r\n                }\r\n            } else if (Object.keys(props.menuOptions).length == 0){\r\n                props.vaultViewSwitch(true)\r\n            }\r\n\r\n        }, [props.menuOptions]\r\n    )\r\n    \r\n    useEffect(\r\n        () => {\r\n            console.log('menuitemselected   ', props.menuItemSelected)\r\n        }, [props.menuItemSelected]\r\n    )\r\n    // const checkIfActive = () => {\r\n\r\n    // }\r\n\r\n    const transformToSubheading = (key) => {\r\n        let subheading = []\r\n        console.log('transform to subheading runs  ', props.menuItemSelected)\r\n        for (let choice of Object.keys(props.menuOptions[key])){\r\n            if (choice != \"id\") {\r\n                // this.choiceID = this.props.templateChoices[key][choice]['id']\r\n                let menuid = props.menuOptions[key][choice]['id']\r\n                subheading.push(\r\n                    <p className={menuid === props.menuItemSelected ? 'active' : ''} onClick={handleMenuClick} id={menuid} key={menuid}>\r\n                        {choice}\r\n                    </p>\r\n                )\r\n            } \r\n        }\r\n\r\n        return subheading\r\n    }\r\n\r\n    const switchText = () => {\r\n        if (props.viewerMode) {\r\n            return \"Vault Editor Mode\"\r\n        } else {\r\n            return \"Vault Viewer Mode\"\r\n        }\r\n    }\r\n\r\n    const switchDisabled = () => {\r\n        if (Object.keys(props.menuOptions).length == 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        props.vaultMenuClickParse(props.vaultid, e.target.id)\r\n        props.vaultTagValueParse(props.vaultid, e.target.id)\r\n        history.push(e.target.id)\r\n        if (props.vaultMenuClicked) {\r\n            props.vaultMenuClickFlag(false)    \r\n        } else if (!(props.vaultMenuClicked)) {\r\n            props.vaultMenuClickFlag(true)\r\n        }\r\n\r\n        props.vaultMenuParseMenuItem(e.target.id)\r\n        props.vaultViewSwitch(false)\r\n    }\r\n\r\n    const transformToMenu = () => {\r\n        if (Object.keys(props.menuOptions).length != 0 ){\r\n            let templateChoiceCate = []\r\n            let index = 0\r\n            for (let category of Object.keys(props.menuOptions)){\r\n                if (category != 'id'){\r\n                    templateChoiceCate.push(\r\n                        <React.Fragment>\r\n                            <Accordion.Title\r\n                                active = {true}\r\n                                index = {index}\r\n                                \r\n                                className = \"menu-header-h1 menu-choice\"\r\n                            >\r\n                            <Icon name='dropdown' />\r\n                                {category.toUpperCase()}\r\n                            </Accordion.Title>\r\n                            <Accordion.Content key={category} active={true}>\r\n                                {transformToSubheading(category)}\r\n                            </Accordion.Content>\r\n                        </React.Fragment>\r\n                    \r\n                    )\r\n                    index += 1\r\n                }\r\n            }\r\n    \r\n            return templateChoiceCate\r\n        } else {\r\n            return <div><h1>NO DATA</h1></div>\r\n        }\r\n\r\n    }\r\n\r\n    const checkViewerMode = () => {\r\n        // case 1: welcome message\r\n       \r\n\r\n    }\r\n    \r\n    return (\r\n        <Resizable   \r\n            defaultSize={{\r\n                width:344,\r\n                height:\"calc(100vh - 44px)\",\r\n            }}\r\n            className=\"templateChoiceMenu\"\r\n            minWidth=\"330px\"\r\n            maxWidth=\"677px\"\r\n            enable={{ top:false, right:true, bottom:false, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\r\n        >\r\n            \r\n\r\n            <Accordion\r\n                exclusive={false}\r\n                className=\"menu-choice-header-h1\"\r\n            >\r\n                <label htmlFor=\"material-switch\">\r\n                    <span>{switchText()}</span>\r\n                    <Switch\r\n                        checked={props.viewerMode}\r\n                        onChange={() => {props.vaultViewSwitch(props.viewerMode == true ? false : true )}}\r\n                        onColor=\"#86d3ff\"\r\n                        onHandleColor=\"#2693e6\"\r\n                        handleDiameter={30}\r\n                        uncheckedIcon={false}\r\n                        checkedIcon={false}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={48}\r\n                        disabled={switchDisabled()}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </label>\r\n                {transformToMenu()}\r\n            </Accordion>\r\n\r\n        </Resizable>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'menuOptions': state.vaultSessionMenuData['data'],\r\n        'viewerMode' : state.appState['viewerMode'],\r\n        'templateCodeFlag': state.appState['templateSubmittedFlag'],\r\n        'vaultMenuClicked': state.appState['menuClickedFlag'],\r\n        'vaultid': state.appState['vaultid'],\r\n        'menuItemSelected': state.appState['menuIdSelected']\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { vaultMenuParseMenuItem, vaultTagValueParse, vaultGetMenuStruct, vaultMenuClickParse, vaultMenuClickFlag, vaultViewSwitch }) (VaultMenu)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\templateDisplayConstructor.js",["214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, { useState, useRef, useEffect, createRef } from 'react';\r\nimport { Accordion, Icon, Button} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { vaultFunctionClicked } from '../../../actions'\r\n// import {  } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction UsePrevious (value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    \r\n    return ref.current;\r\n\r\n}\r\n\r\nconst VaultTemplateDisplay = (props) => {\r\n    let history = useHistory()\r\n    const [codeLoaded, setCodeLoaded] = useState(false)\r\n    const [activeAccordianIndex, setActiveAccordianIndex] = useState([0, 1])\r\n    const templateCodeRef = useRef();\r\n    let previousState;\r\n    \r\n\r\n    useEffect( () => {\r\n        console.log('vaultTemplateDisplay useeffect for menuItemSelected is run' )\r\n        if (props.templateCode != '') {\r\n            if (history.location.hash === '') {\r\n                props.vaultFunctionClicked('overall_descrip')\r\n            } else {\r\n                let functionId = history.location.hash.split(\"#\")[1]\r\n                if (props.functionList.includes(functionId)){\r\n                    props.vaultFunctionClicked(functionId)\r\n                    \r\n                    document.getElementById(functionId).scrollIntoView()\r\n                }\r\n            }\r\n        }\r\n    }, [props.menuItemSelected, props.functionList])\r\n\r\n    const getActiveStatus = (mode, functionName) => {\r\n        if (functionName == props.functionFocus) {\r\n            if (mode === \"code\") {\r\n                return 'codeDiv highlighted'\r\n            } else if (mode === \"function\") {\r\n                return 'active'\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const markTemplateCode = () => {\r\n        let [split_code_sub, split_code_func] = props.templateCode.split(new RegExp('end sub', 'i'))\r\n        let [subRegex, funcRegex] = [/Sub (\\w+)(?=[()])/, /Function (\\w+)(?=[()])/]\r\n        split_code_func = split_code_func != null ? split_code_func.split(new RegExp('end function', 'i')) : ''\r\n        split_code_sub = split_code_sub != null ? split_code_sub.split(new RegExp('end sub', 'i')) : ''\r\n        let split_code = [...split_code_sub, ...split_code_func]\r\n        let anchorName;\r\n        \r\n\r\n        let code = split_code.map((codeBlock) => {\r\n            if (codeBlock !== '') {\r\n                if (subRegex.test(codeBlock)) {\r\n                    codeBlock = codeBlock.trim() + \"\\nEnd Sub\"\r\n                    anchorName = codeBlock.match(subRegex)[1]\r\n\r\n                } else if (funcRegex.test(codeBlock)) {\r\n                    codeBlock = codeBlock.trim() + \"\\nEnd Function\"\r\n                    anchorName = codeBlock.match(funcRegex)[1]\r\n                }\r\n                \r\n                return (\r\n                    <React.Fragment>\r\n                        {/* <a id={anchorName}></a> */}\r\n\r\n                        <div id={anchorName} className={getActiveStatus('code', anchorName)}>\r\n                            <SyntaxHighlighter language='vba'>\r\n                                {codeBlock}\r\n                            </SyntaxHighlighter>\r\n                        </div>\r\n                    </React.Fragment>\r\n                    \r\n                )\r\n            }\r\n        })\r\n\r\n        return code\r\n\r\n    }\r\n\r\n    const handleTitleClick = (index) => {\r\n        let tmp_index\r\n        if (activeAccordianIndex.includes(index)){\r\n            activeAccordianIndex.splice(activeAccordianIndex.indexOf(index), 1)\r\n            setActiveAccordianIndex([...activeAccordianIndex])\r\n            \r\n        } else {\r\n            activeAccordianIndex.push(index)\r\n            setActiveAccordianIndex([...activeAccordianIndex])\r\n        }        \r\n    }\r\n\r\n    const renderTemplateCode = () => {\r\n        let split_code;\r\n        if ((props.menuClicked !== '') || (props.templateCode)){\r\n            if (props.templateCode !== '') {\r\n                split_code = markTemplateCode()\r\n                // previousTemplateCode = UsePrevious(props.templateCode)\r\n            }\r\n            \r\n            return split_code\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n    const renderFunctions = () => {\r\n        if ((props.menuOptions !== '') && (props.vaultMenuClicked === '') && (props.templateCode == '')){\r\n            return (\r\n                // make this look better\r\n                <Alert variant=\"dark\">\r\n                    Click on a template to the left to see its code and function breakdown \r\n                </Alert>\r\n            )\r\n        } else if (((props.menuItemSelected !== '') && (props.functionList !== '')) || (props.templateCode != '')) {\r\n            let functionButtonArea;\r\n            functionButtonArea = props.functionList.map( (funcName) => {\r\n                    return (\r\n                        <Button\r\n                        basic\r\n                        color=\"blue\"\r\n                        onClick={() => {\r\n                            document.getElementById(funcName).scrollIntoView()\r\n                            props.vaultFunctionClicked(funcName)\r\n                            history.push('#'+ funcName)}}\r\n                            className={getActiveStatus('function', funcName)}>\r\n                            {funcName}\r\n                        </Button>\r\n                    \r\n                    )\r\n                }\r\n                \r\n            )\r\n\r\n            functionButtonArea.splice(0, 0,\r\n                    <Button  \r\n                        basic\r\n                        color=\"blue\"\r\n                        onClick={() => {\r\n                            props.vaultFunctionClicked(\"overall_descrip\")}}\r\n                        className={getActiveStatus('function', 'overall_descrip')}>\r\n                        Overall Description\r\n                    </Button>\r\n            )\r\n\r\n            \r\n\r\n            return functionButtonArea\r\n        }\r\n\r\n        return null\r\n        \r\n    }\r\n\r\n    const displayCode = () => {\r\n\r\n        return (\r\n\r\n            <Accordion className=\"template-display-inner-cont\">\r\n                <Accordion.Title\r\n                    onClick={() => handleTitleClick(0)}\r\n                    active={activeAccordianIndex.includes(0)}\r\n                    index={0}\r\n                    className=\"menu-header-h1 menu-choice\"\r\n                >\r\n                    <Icon name='dropdown' />\r\n                    TEMPALTE CODE FUNCTION(S)\r\n\r\n                </Accordion.Title>\r\n                <Accordion.Content \r\n                    style={{paddingBottom: '0px'}} \r\n                    active={activeAccordianIndex.includes(0)}>\r\n                    <div className=\"template-function-break-cont\">\r\n                        {renderFunctions()}\r\n                    </div>\r\n\r\n                </Accordion.Content>\r\n                <Accordion.Title\r\n                    onClick={() => handleTitleClick(1)}\r\n                    active={activeAccordianIndex.includes(1)}\r\n                    index={1}\r\n                    className=\"menu-header-h1 menu-choice\"\r\n                >\r\n                    <Icon name='dropdown' />\r\n                    CODE\r\n                </Accordion.Title>\r\n\r\n                <Accordion.Content \r\n                    className=\"template-code-cont\" \r\n                    active={activeAccordianIndex.includes(1)}>\r\n                    {renderTemplateCode()}\r\n                </Accordion.Content>\r\n            </Accordion>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"macro-generator-container\">\r\n                {displayCode()}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuClicked : state.appState['menuClickedFlag'],\r\n        templateCode : state.templateTags['templateCode'],\r\n        vaultMenuClicked: state.appState['menuClickedFlag'],\r\n        vaultid: state.appState['vaultid'],\r\n        menuOptions: state.vaultSessionMenuData['data'],\r\n        functionList: state.templateTags['funcList'],\r\n        functionFocus: state.appState['functionSelected'],\r\n        menuItemSelected: state.appState['menuIdSelected']\r\n    }\r\n}\r\nexport default connect( mapStateToProps, { vaultFunctionClicked })(VaultTemplateDisplay);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\appStateReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\templateInputArea.js",["227","228","229"],"import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setVaultID, vaultTemplateSubmitted } from '../../../actions';\r\nimport { useFormik } from 'formik';\r\nimport parseRequestAxio from '../../../apis/parseRequest';\r\nimport { TextArea, Input } from 'semantic-ui-react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst TemplateInputArea = (props) => {\r\n    let history = useHistory()\r\n    const resetVault = () => {\r\n        let tmp_vaultid;\r\n        tmp_vaultid = makeid(8)\r\n        history.push('/vaultID/' + tmp_vaultid)\r\n        props.setVaultID(tmp_vaultid)\r\n    }\r\n\r\n    const postNewVault = async (values) => {\r\n        values['vaultID'] =  props.vaultID\r\n        console.log(values)\r\n        let response = await parseRequestAxio.post('/postNewVaultTemplate/', values)\r\n        if (props.templateCodeFlag) {\r\n            props.vaultTemplateSubmitted(false)\r\n        } else {\r\n            props.vaultTemplateSubmitted(true)\r\n        }\r\n    }\r\n\r\n    function makeid(length) {\r\n        var result           = '';\r\n        var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            vbaInput: '',\r\n            templateNameInput: '',\r\n            templateCateInput: ''\r\n        },\r\n\r\n        onSubmit: values => {\r\n            values.templateCateInput = values.templateCateInput == '' ? \"All Category\" : values.templateCateInput\r\n            postNewVault(values)\r\n        },\r\n\r\n        enableReinitialize : true\r\n    });\r\n\r\n    return (\r\n             \r\n            <div className=\"column2-area\">\r\n                <form onSubmit={formik.handleSubmit} className='vba-codeinput'>\r\n                    <div className=\"input-options-cont\">\r\n                        <div>\r\n                            <label className=\"vault-builder-lbl\" htmlFor=\"templateCateInput\">Template Category Name</label>\r\n                            <Input id=\"templateCateInput\" name=\"templateCateInput\" className='templateCateInput' placeholder='Defaults to \"All Category\"' onChange={formik.handleChange} value={formik.values.templateCateInput} />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                        <label className=\"vault-builder-lbl\" htmlFor=\"templateNameInput\">Template Name</label>\r\n                            <Input id=\"templateNameInput\" name=\"templateNameInput\" className='templateNameInput' placeholder='Defaults to \"All Category\"' onChange={formik.handleChange} value={formik.values.templateNameInput} />\r\n                        </div>\r\n                        \r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <label className=\"vault-builder-lbl\" htmlFor=\"vbaInput\">Input your vba code</label>\r\n                            <Button type=\"submit\" variant=\"outline-success\">Add Code</Button>\r\n                            <Button onClick={resetVault} variant=\"outline-success\">Create New Vault</Button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                    <TextArea  id=\"vbaInput\" name=\"vbaInput\" className='vba-code-textarea' placeholder='VBA Code Here' onChange={formik.handleChange} value={formik.values.vbaCode}/>\r\n                </form>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        vaultID : state.appState['vaultid'],\r\n        templateCodeFlag: state.appState['templateSubmittedFlag']\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setVaultID , vaultTemplateSubmitted }) (TemplateInputArea);",["230","231"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\create_vault\\vault_constructors\\informationBoxContainer.js",["232","233","234"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Resizable } from \"re-resizable\";\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nconst InformationBoxContainer = (props) => {\r\n\r\n    useEffect( () => {\r\n\r\n    }, [props.functionSelected])\r\n\r\n    const renderTemplateDescrip = () => {\r\n        let descrip_txt; \r\n        if (props.functionSelected != '') {\r\n            if (props.functionSelected != 'overall_descrip') {\r\n                descrip_txt = props.templateTagData['func_descrip'][props.functionSelected]\r\n            } else {\r\n                //todo: change this later to be consistent\r\n                descrip_txt = props.templateTagData['overall_descrip']\r\n            }\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"descrip-header\">{props.functionSelected}</p>\r\n                    <p className=\"descrip-txt\">\r\n                        {descrip_txt}\r\n                    </p>\r\n                </React.Fragment>\r\n            )\r\n            \r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Resizable   \r\n            defaultSize={{\r\n                width:377,\r\n                height:\"calc(100vh - 44px)\",\r\n            }}\r\n            className=\"informationBox\"\r\n            minWidth=\"420px\"\r\n            maxWidth=\"677px\"\r\n            enable={{ top:false, right:false, bottom:false, left:true, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\r\n            >\r\n\r\n                <div className=\"template-info-cont\">\r\n                    {renderTemplateDescrip()}\r\n                </div>\r\n\r\n                <div className=\"template-code-opt-cont\">\r\n                    {/* <CodeOptions /> */}\r\n                </div>\r\n\r\n                <div className=\"template-targetcol-cont\">\r\n                    {/* <ColumnSettingSection /> */}\r\n                </div>\r\n            </Resizable>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'functionSelected': state.appState['functionSelected'],\r\n        'templateTagData': state.templateTags['data']\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(InformationBoxContainer)",{"ruleId":"235","severity":1,"message":"236","line":5,"column":25,"nodeType":"237","messageId":"238","endLine":5,"endColumn":35},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"235","severity":1,"message":"243","line":14,"column":7,"nodeType":"237","messageId":"238","endLine":14,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":22,"column":5,"nodeType":"246","messageId":"247","endLine":24,"endColumn":6},{"ruleId":"239","replacedBy":"248"},{"ruleId":"241","replacedBy":"249"},{"ruleId":"235","severity":1,"message":"250","line":4,"column":30,"nodeType":"237","messageId":"238","endLine":4,"endColumn":34},{"ruleId":"235","severity":1,"message":"251","line":4,"column":36,"nodeType":"237","messageId":"238","endLine":4,"endColumn":41},{"ruleId":"252","severity":1,"message":"253","line":25,"column":43,"nodeType":"254","messageId":"255","endLine":25,"endColumn":45},{"ruleId":"256","severity":1,"message":"257","line":26,"column":19,"nodeType":"258","messageId":"259","endLine":26,"endColumn":21},{"ruleId":"256","severity":1,"message":"260","line":36,"column":72,"nodeType":"258","messageId":"259","endLine":36,"endColumn":74},{"ruleId":"256","severity":1,"message":"260","line":42,"column":72,"nodeType":"258","messageId":"259","endLine":42,"endColumn":74},{"ruleId":"256","severity":1,"message":"260","line":49,"column":72,"nodeType":"258","messageId":"259","endLine":49,"endColumn":74},{"ruleId":"256","severity":1,"message":"257","line":66,"column":25,"nodeType":"258","messageId":"259","endLine":66,"endColumn":27},{"ruleId":"235","severity":1,"message":"261","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":6,"column":5,"nodeType":"246","messageId":"247","endLine":9,"endColumn":6},{"ruleId":"256","severity":1,"message":"260","line":12,"column":41,"nodeType":"258","messageId":"259","endLine":12,"endColumn":43},{"ruleId":"256","severity":1,"message":"260","line":22,"column":57,"nodeType":"258","messageId":"259","endLine":22,"endColumn":59},{"ruleId":"235","severity":1,"message":"262","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":12},{"ruleId":"256","severity":1,"message":"257","line":24,"column":36,"nodeType":"258","messageId":"259","endLine":24,"endColumn":38},{"ruleId":"256","severity":1,"message":"257","line":41,"column":44,"nodeType":"258","messageId":"259","endLine":41,"endColumn":46},{"ruleId":"256","severity":1,"message":"260","line":85,"column":51,"nodeType":"258","messageId":"259","endLine":85,"endColumn":53},{"ruleId":"252","severity":1,"message":"253","line":102,"column":45,"nodeType":"254","messageId":"255","endLine":102,"endColumn":47},{"ruleId":"256","severity":1,"message":"257","line":103,"column":36,"nodeType":"258","messageId":"259","endLine":103,"endColumn":38},{"ruleId":"263","severity":1,"message":"264","line":116,"column":41,"nodeType":"265","endLine":116,"endColumn":70},{"ruleId":"266","severity":1,"message":"267","line":116,"column":41,"nodeType":"265","endLine":116,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":145,"column":33,"nodeType":"258","messageId":"259","endLine":145,"endColumn":35},{"ruleId":"256","severity":1,"message":"260","line":146,"column":37,"nodeType":"258","messageId":"259","endLine":146,"endColumn":39},{"ruleId":"256","severity":1,"message":"260","line":148,"column":44,"nodeType":"258","messageId":"259","endLine":148,"endColumn":46},{"ruleId":"263","severity":1,"message":"264","line":172,"column":21,"nodeType":"265","endLine":172,"endColumn":45},{"ruleId":"266","severity":1,"message":"267","line":172,"column":21,"nodeType":"265","endLine":172,"endColumn":45},{"ruleId":"256","severity":1,"message":"260","line":189,"column":29,"nodeType":"258","messageId":"259","endLine":189,"endColumn":31},{"ruleId":"256","severity":1,"message":"260","line":192,"column":37,"nodeType":"258","messageId":"259","endLine":192,"endColumn":39},{"ruleId":"256","severity":1,"message":"257","line":194,"column":35,"nodeType":"258","messageId":"259","endLine":194,"endColumn":37},{"ruleId":"256","severity":1,"message":"260","line":202,"column":25,"nodeType":"258","messageId":"259","endLine":202,"endColumn":27},{"ruleId":"235","severity":1,"message":"268","line":41,"column":17,"nodeType":"237","messageId":"238","endLine":41,"endColumn":26},{"ruleId":"252","severity":1,"message":"253","line":43,"column":83,"nodeType":"254","messageId":"255","endLine":43,"endColumn":85},{"ruleId":"256","severity":1,"message":"257","line":45,"column":32,"nodeType":"258","messageId":"259","endLine":45,"endColumn":34},{"ruleId":"256","severity":1,"message":"257","line":45,"column":66,"nodeType":"258","messageId":"259","endLine":45,"endColumn":68},{"ruleId":"256","severity":1,"message":"260","line":55,"column":72,"nodeType":"258","messageId":"259","endLine":55,"endColumn":74},{"ruleId":"256","severity":1,"message":"260","line":72,"column":68,"nodeType":"258","messageId":"259","endLine":72,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":19,"column":39,"nodeType":"258","messageId":"259","endLine":19,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":39,"column":24,"nodeType":"258","messageId":"259","endLine":39,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":65,"column":26,"nodeType":"258","messageId":"259","endLine":65,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":4,"column":5,"nodeType":"246","messageId":"247","endLine":7,"endColumn":6},{"ruleId":"235","severity":1,"message":"269","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":15},{"ruleId":"256","severity":1,"message":"260","line":32,"column":18,"nodeType":"258","messageId":"259","endLine":32,"endColumn":20},{"ruleId":"256","severity":1,"message":"260","line":35,"column":25,"nodeType":"258","messageId":"259","endLine":35,"endColumn":27},{"ruleId":"256","severity":1,"message":"260","line":38,"column":25,"nodeType":"258","messageId":"259","endLine":38,"endColumn":27},{"ruleId":"256","severity":1,"message":"260","line":52,"column":30,"nodeType":"258","messageId":"259","endLine":52,"endColumn":32},{"ruleId":"256","severity":1,"message":"260","line":54,"column":30,"nodeType":"258","messageId":"259","endLine":54,"endColumn":32},{"ruleId":"256","severity":1,"message":"260","line":56,"column":30,"nodeType":"258","messageId":"259","endLine":56,"endColumn":32},{"ruleId":"270","severity":1,"message":"271","line":67,"column":25,"nodeType":"265","endLine":71,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":77,"column":25,"nodeType":"265","endLine":81,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":87,"column":25,"nodeType":"265","endLine":91,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":98,"column":25,"nodeType":"265","endLine":101,"endColumn":27},{"ruleId":"235","severity":1,"message":"269","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":15},{"ruleId":"235","severity":1,"message":"272","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":28},{"ruleId":"235","severity":1,"message":"273","line":6,"column":9,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"274","line":6,"column":20,"nodeType":"237","messageId":"238","endLine":6,"endColumn":24},{"ruleId":"235","severity":1,"message":"262","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":12},{"ruleId":"235","severity":1,"message":"275","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":13,"column":5,"nodeType":"246","messageId":"247","endLine":15,"endColumn":6},{"ruleId":"239","replacedBy":"276"},{"ruleId":"241","replacedBy":"277"},{"ruleId":"235","severity":1,"message":"278","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"279","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":16},{"ruleId":"235","severity":1,"message":"280","line":4,"column":18,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"281","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":24},{"ruleId":"235","severity":1,"message":"282","line":15,"column":12,"nodeType":"237","messageId":"238","endLine":15,"endColumn":25},{"ruleId":"235","severity":1,"message":"283","line":15,"column":27,"nodeType":"237","messageId":"238","endLine":15,"endColumn":43},{"ruleId":"284","severity":1,"message":"285","line":51,"column":8,"nodeType":"286","endLine":51,"endColumn":23,"suggestions":"287"},{"ruleId":"256","severity":1,"message":"257","line":63,"column":23,"nodeType":"258","messageId":"259","endLine":63,"endColumn":25},{"ruleId":"235","severity":1,"message":"288","line":1,"column":28,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"289","line":18,"column":7,"nodeType":"286","endLine":18,"endColumn":31,"suggestions":"290"},{"ruleId":"256","severity":1,"message":"260","line":30,"column":62,"nodeType":"258","messageId":"259","endLine":30,"endColumn":64},{"ruleId":"284","severity":1,"message":"289","line":34,"column":12,"nodeType":"286","endLine":34,"endColumn":31,"suggestions":"291"},{"ruleId":"256","severity":1,"message":"257","line":50,"column":24,"nodeType":"258","messageId":"259","endLine":50,"endColumn":26},{"ruleId":"256","severity":1,"message":"260","line":73,"column":51,"nodeType":"258","messageId":"259","endLine":73,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":95,"column":51,"nodeType":"258","messageId":"259","endLine":95,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":99,"column":30,"nodeType":"258","messageId":"259","endLine":99,"endColumn":32},{"ruleId":"235","severity":1,"message":"292","line":128,"column":11,"nodeType":"237","messageId":"238","endLine":128,"endColumn":26},{"ruleId":"256","severity":1,"message":"260","line":155,"column":81,"nodeType":"258","messageId":"259","endLine":155,"endColumn":83},{"ruleId":"235","severity":1,"message":"293","line":1,"column":46,"nodeType":"237","messageId":"238","endLine":1,"endColumn":55},{"ruleId":"235","severity":1,"message":"294","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":21},{"ruleId":"235","severity":1,"message":"295","line":23,"column":12,"nodeType":"237","messageId":"238","endLine":23,"endColumn":22},{"ruleId":"235","severity":1,"message":"296","line":23,"column":24,"nodeType":"237","messageId":"238","endLine":23,"endColumn":37},{"ruleId":"235","severity":1,"message":"297","line":25,"column":11,"nodeType":"237","messageId":"238","endLine":25,"endColumn":26},{"ruleId":"235","severity":1,"message":"298","line":26,"column":9,"nodeType":"237","messageId":"238","endLine":26,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":31,"column":32,"nodeType":"258","messageId":"259","endLine":31,"endColumn":34},{"ruleId":"284","severity":1,"message":"299","line":43,"column":8,"nodeType":"286","endLine":43,"endColumn":52,"suggestions":"300"},{"ruleId":"256","severity":1,"message":"260","line":46,"column":26,"nodeType":"258","messageId":"259","endLine":46,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":65,"column":47,"nodeType":"254","messageId":"255","endLine":65,"endColumn":49},{"ruleId":"235","severity":1,"message":"301","line":96,"column":13,"nodeType":"237","messageId":"238","endLine":96,"endColumn":22},{"ruleId":"256","severity":1,"message":"260","line":121,"column":98,"nodeType":"258","messageId":"259","endLine":121,"endColumn":100},{"ruleId":"256","severity":1,"message":"257","line":128,"column":108,"nodeType":"258","messageId":"259","endLine":128,"endColumn":110},{"ruleId":"235","severity":1,"message":"288","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":24},{"ruleId":"235","severity":1,"message":"302","line":22,"column":13,"nodeType":"237","messageId":"238","endLine":22,"endColumn":21},{"ruleId":"256","severity":1,"message":"260","line":48,"column":65,"nodeType":"258","messageId":"259","endLine":48,"endColumn":67},{"ruleId":"239","replacedBy":"303"},{"ruleId":"241","replacedBy":"304"},{"ruleId":"235","severity":1,"message":"305","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":14,"column":36,"nodeType":"258","messageId":"259","endLine":14,"endColumn":38},{"ruleId":"256","severity":1,"message":"257","line":15,"column":40,"nodeType":"258","messageId":"259","endLine":15,"endColumn":42},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["306"],"no-negated-in-lhs",["307"],"'nodeChoiceRenderMap' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["306"],["307"],"'Menu' is defined but never used.","'Radio' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'connect' is defined but never used.","'hljs' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'func_name' is defined but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FunctionBreakdownBar' is defined but never used.","'Accordion' is defined but never used.","'Icon' is defined but never used.","'SyntaxHighlighter' is defined but never used.",["306"],["307"],"'Button' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'parseRequestAxio' is defined but never used.","'vaultidloaded' is assigned a value but never used.","'setvaultidloaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["308"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["309"],["310"],"'checkViewerMode' is assigned a value but never used.","'createRef' is defined but never used.","'UsePrevious' is defined but never used.","'codeLoaded' is assigned a value but never used.","'setCodeLoaded' is assigned a value but never used.","'templateCodeRef' is assigned a value but never used.","'previousState' is defined but never used.","React Hook useEffect has missing dependencies: 'history.location.hash' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["311"],"'tmp_index' is defined but never used.","'response' is assigned a value but never used.",["306"],["307"],"'propTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [history, props, props.vaultid]",{"range":"320","text":"321"},"Update the dependencies array to be: [props, props.templateCodeFlag]",{"range":"322","text":"323"},"Update the dependencies array to be: [props, props.menuOptions]",{"range":"324","text":"325"},"Update the dependencies array to be: [props.menuItemSelected, props.functionList, props, history.location.hash]",{"range":"326","text":"327"},[2269,2284],"[history, props, props.vaultid]",[692,716],"[props, props.templateCodeFlag]",[1260,1279],"[props, props.menuOptions]",[1484,1528],"[props.menuItemSelected, props.functionList, props, history.location.hash]"]