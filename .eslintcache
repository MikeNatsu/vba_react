[{"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js":"1","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js":"2","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js":"3","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js":"4","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js":"5","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js":"6","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\templates\\nodePropertyBox.js":"7","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js":"8","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js":"9","A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js":"10","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\settingsAccordian.js":"11","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js":"12","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\propertyDescrip.js":"13","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\settingFields.js":"14","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\data_column_components\\columnDropDownList.js":"15","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js":"16","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js":"17","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js":"18","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js":"19","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_display_area\\templateDisplay.js":"20","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_display_area\\template_display_sections\\functionBreakdown.js":"21","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js":"22","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js":"23","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js":"24","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js":"25","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js":"26"},{"size":567,"mtime":1608950319415,"results":"27","hashOfConfig":"28"},{"size":316,"mtime":1613276786235,"results":"29","hashOfConfig":"28"},{"size":923,"mtime":1613110462323,"results":"30","hashOfConfig":"28"},{"size":455,"mtime":1612845854844,"results":"31","hashOfConfig":"28"},{"size":2632,"mtime":1613277238590,"results":"32","hashOfConfig":"28"},{"size":259,"mtime":1609466132147,"results":"33","hashOfConfig":"28"},{"size":2362,"mtime":1611433247260,"results":"34","hashOfConfig":"28"},{"size":236,"mtime":1609005871074,"results":"35","hashOfConfig":"28"},{"size":259,"mtime":1613169777118,"results":"36","hashOfConfig":"28"},{"size":102,"mtime":1609641603356,"results":"37","hashOfConfig":"28"},{"size":3789,"mtime":1611636819890,"results":"38","hashOfConfig":"28"},{"size":322,"mtime":1609993617926,"results":"39","hashOfConfig":"28"},{"size":539,"mtime":1609993174309,"results":"40","hashOfConfig":"28"},{"size":2554,"mtime":1612742405898,"results":"41","hashOfConfig":"28"},{"size":2477,"mtime":1613250781214,"results":"42","hashOfConfig":"28"},{"size":456,"mtime":1613251338984,"results":"43","hashOfConfig":"28"},{"size":316,"mtime":1613169781340,"results":"44","hashOfConfig":"28"},{"size":244,"mtime":1613105968512,"results":"45","hashOfConfig":"28"},{"size":6044,"mtime":1613277993368,"results":"46","hashOfConfig":"28"},{"size":5669,"mtime":1613277473934,"results":"47","hashOfConfig":"28"},{"size":3140,"mtime":1613260528726,"results":"48","hashOfConfig":"28"},{"size":3902,"mtime":1613277787266,"results":"49","hashOfConfig":"28"},{"size":1942,"mtime":1613277794107,"results":"50","hashOfConfig":"28"},{"size":3491,"mtime":1613277794107,"results":"51","hashOfConfig":"28"},{"size":439,"mtime":1613278402675,"results":"52","hashOfConfig":"28"},{"size":1430,"mtime":1613278238316,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"mfu6s6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},"A:\\coding\\websites\\vba-macro-builder\\react\\src\\index.js",[],["119","120"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\App.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\mainFlowReducer.js",["121"],"// reducers for changing the property of the node\r\n// todo: change later\r\n\r\nconst INITIAL_STATE = {\r\n    mainFlow : null\r\n}\r\n\r\nconst mainFlowReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NODE':\r\n            return {...state, ...action.payload}\r\n        case 'MODIFY_NODE_PROPERTY':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mainFlowReducer;","A:\\coding\\websites\\vba-macro-builder\\react\\src\\actions\\index.js",["122"],"import parseRequestAxio from '../apis/parseRequest'\r\nimport hljs from 'highlight.js';\r\n// import '../components/mainAppLayout/node_modules/highlight.js/styles/github.css';\r\nimport hljsVba from 'highlight.js/lib/vba';\r\n// console.log(hljs)\r\n\r\nconst getInitialNodeProp = (nodeID) => {\r\n    // move this into another file at some point\r\n    let nodePropObj = {}\r\n    //bunch of rules here for intiail node property\r\n    let nodeClass = nodeID.split('-')[0]\r\n    \r\n    if (nodeClass == 'dqNum') {\r\n        nodePropObj[nodeID] = {\r\n            columns: '',\r\n            error_flag: ''\r\n        }\r\n    \r\n    }\r\n\r\n    return nodePropObj\r\n}\r\n\r\nexport const addNodeToFlow = (mainFlowNodes) => {\r\n    let nodeID = Object.keys(mainFlowNodes)[0]\r\n\r\n    let newNode = {...mainFlowNodes, ...getInitialNodeProp(nodeID)}\r\n    return {\r\n        type: 'ADD_NODE',\r\n        payload: newNode\r\n    }\r\n}\r\n\r\nexport const modifyNodeProperty = (nodeClass, changedProps) => {\r\n    let payload = {}\r\n    payload[nodeClass] = changedProps\r\n\r\n    return {\r\n        type: 'MODIFY_NODE_PROPERTY',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const selectNode = (nodeClass) => {\r\n    return {\r\n        type: 'SELECT_NODE',\r\n        payload: nodeClass\r\n    }\r\n}\r\n\r\nexport const selectMenu = (topic) => {\r\n    return {\r\n        type: 'SELECT_MENU_OPTION',\r\n        payload: topic\r\n    }\r\n}\r\n\r\nexport const parseNodeRequest = () => {\r\n    return async (dispatch, getState) => {\r\n        let response = await parseRequestAxio.post('/nodeParse/', {'a':'a'});\r\n        // console.log(response)\r\n        dispatch({ type: \"PARSE_TEMPLATE_CODE\", payload: response.data});\r\n        hljs.initHighlighting.called = false;\r\n        hljs.initHighlighting();\r\n        hljs.registerLanguage(\"vba\", hljsVba);\r\n      }\r\n}\r\n\r\nexport const mouseOverProperty = (propertyType) => {\r\n    return {\r\n        type: \"MOUSEOVER_PROPERTY\",\r\n        payload: propertyType\r\n    }\r\n}\r\n\r\nexport const mouseOutOfProperty = (propertyType) => {\r\n    return {\r\n        type: \"MOUSEOUT_PROPERTY\"\r\n    }\r\n}\r\n\r\nexport const columnDropDownSubmit = (columnList) => {\r\n    return {\r\n        type: \"COLUMN_LIST_SUBMIT\",\r\n        payload: columnList\r\n    }\r\n}\r\n\r\nexport const columnTypeChanged = (newType) => {\r\n    return {\r\n        type: 'COLUMN_TYPE_CHANGED',\r\n        payload: newType\r\n    }\r\n}\r\n\r\nexport const templateFunctionBreakdownSelect = (func_name) => {\r\n    return {\r\n        type: 'ADD_HIGHLIGHT_SECTION',\r\n        payload: func_name\r\n    }\r\n}\r\n\r\nexport const toggleInsertColumn = (toggleStatus) => {\r\n    return {\r\n        type: 'TOGGLE_INSERT_COLUMN',\r\n        payload: toggleStatus\r\n    }\r\n}","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\templates\\nodePropertyBox.js",["123","124","125","126"],"import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { modifyNodeProperty } from '../../actions/index'\r\nimport { Button, Checkbox, Form, Tab } from 'semantic-ui-react'\r\nimport PropertyAccord from '../nodePropertyBox/settingsAccordian'\r\nimport PropertyDescrip from '../nodePropertyBox/propertyDescrip'\r\n\r\nclass nodePropertyBox extends React.Component {\r\n    // overall setup of the node property box\r\n    componentDidMount () {\r\n        document.querySelector('.property-menu a:nth-child(2)').classList.add(\"disabled\")\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.nodeProperty == null) {\r\n            document.querySelector('.property-menu a:nth-child(2)').classList.add(\"disabled\")\r\n        } else {\r\n            document.querySelector('.property-menu a:nth-child(2)').classList.remove(\"disabled\")\r\n        }\r\n    }\r\n\r\n    getSettingPane = () => {\r\n        if (this.props.nodeProperty == null) {\r\n            return ( \r\n                <Tab.Pane></Tab.Pane>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Tab.Pane>\r\n                <div style={{display:\"flex\"}}>\r\n                    <PropertyAccord nodeProperty={this.props.nodeProperty}/>\r\n                    <PropertyDescrip />\r\n                </div>\r\n            </Tab.Pane>\r\n        )\r\n    }\r\n    getTabPanes = () => {\r\n        const panes = [\r\n            {\r\n                menuItem: \"About\",\r\n\r\n                render: () => <Tab.Pane>About this function</Tab.Pane>\r\n            },\r\n            {\r\n                menuItem: 'Settings',\r\n                render: () => this.getSettingPane()\r\n\r\n            },\r\n        ]\r\n\r\n        return panes\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n                <Tab className=\"property-menu\" menu={{ pointing: true, className: \"node-prop tab-lbl\" }} panes={this.getTabPanes()} />\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state, ownProps)\r\n    // return { test: 'test' }\r\n    if (ownProps.nodeProperty == null) {\r\n        return { nodeProperties: null }\r\n    } else {\r\n        return { nodeProperties: state.mainFlowNodes[ownProps.nodeProperty] }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { modifyNodeProperty })(nodePropertyBox)",["127","128"],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedNodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\selectedMenuOptionReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\apis\\parseRequest.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\settingsAccordian.js",["129","130","131","132","133"],"import { Accordion, Icon, Button, Checkbox, Form, Tab } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { mouseOverProperty, mouseOutOfProperty, modifyNodeProperty } from '../../actions'\r\nimport SettingsFields from './settingFields'\r\n\r\nclass settingsAccordian extends React.Component {\r\n    //settings accordian that takes into the settings fields and property description\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { activeIndex: [0] }\r\n    }\r\n\r\n\r\n\r\n    handleTitleClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.activeIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index))\r\n            this.setState({ activeIndex: activeIndexAry })\r\n        } else {\r\n            // let activeIndexes = activeIndexAry.concat(index) \r\n            this.setState({ activeIndex: activeIndexAry.concat(index) })\r\n        }\r\n\r\n    }\r\n\r\n    getSettingsAccord = () => {\r\n        if (this.props.nodeProperty == null) {\r\n            return (\r\n                <Tab.Pane></Tab.Pane>\r\n            )\r\n        }\r\n\r\n        return (\r\n\r\n            <Accordion\r\n                exclusive={false}\r\n                fluid\r\n                styled\r\n                className=\"\"\r\n                style={{ width: \"50%\" }}\r\n            >\r\n                <div\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                    id=\"addColumn\">\r\n                    <Accordion.Title\r\n                        onClick={this.handleTitleClick}\r\n                        active={this.state.activeIndex.includes(0)}\r\n                        index={0}\r\n                        className=\"test-header\"\r\n                    >\r\n                    \r\n                    <Icon name='dropdown' />\r\n                        Insert Columns\r\n                    </Accordion.Title>\r\n                    <Accordion.Content className=\"test-content\" active={this.state.activeIndex.includes(0)}>\r\n                        <SettingsFields nodeProperty={this.props.nodeProperty}/>\r\n                    </Accordion.Content>\r\n                </div>\r\n\r\n\r\n                <div\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                    id=\"some Other Property\">\r\n                    <Accordion.Title\r\n                        onClick={this.handleTitleClick}\r\n                        active={this.state.activeIndex.includes(1)}\r\n                        index={1}\r\n                    >\r\n                        <Icon name='dropdown' />\r\n                    Insert Columns\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={this.state.activeIndex.includes(1)}>\r\n                        Insert columns here\r\n                    </Accordion.Content>\r\n                </div>\r\n\r\n\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n\r\n    onMouseEnter = (e) => {\r\n        // console.log(e)\r\n        this.props.mouseOverProperty(e.target.parentNode.id)\r\n    }\r\n\r\n    onMouseLeave = (e) => {\r\n        this.props.mouseOutOfProperty()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.getSettingsAccord()\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state, ownProps)\r\n    // return { test: 'test' }\r\n    if (ownProps.nodeProperty == null) {\r\n        return { nodeProperties: null }\r\n    } else {\r\n        \r\n        return { nodeProperties: state.mainFlowNodes[ownProps.nodeProperty] }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { mouseOverProperty, mouseOutOfProperty })(settingsAccordian);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\nodePropertyDescripReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\propertyDescrip.js",["134"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass propertyDescrip extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.props.nodePropertyDescriptionSelect}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        'nodePropertyDescriptionSelect' : state.nodePropertyDescrip\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, {} )(propertyDescrip)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\settingFields.js",["135","136","137","138","139"],"import { Formik, Field } from 'formik';\r\nimport { Accordion, Icon, Button, Checkbox, Form, Tab } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { modifyNodeProperty, columnDropDownSubmit } from '../../actions'\r\nimport React from 'react';\r\nimport ColumnDropDown from './data_column_components/columnDropDownList'\r\n\r\nclass settingFields extends React.Component {\r\n    parseColumnPaste (inputVal) {\r\n        let tmp_obj = {}\r\n        let columnAry = inputVal.split('\\t')\r\n        let col;\r\n        for (col of columnAry) {\r\n            tmp_obj[col] = 'na'\r\n        }\r\n\r\n        return tmp_obj\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.nodeProperties)\r\n        return (\r\n            <React.Fragment>\r\n                <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={this.props.nodeProperties}\r\n                    onSubmit={(values) => {\r\n                        this.props.modifyNodeProperty(this.props.nodeProperty, values)\r\n                        this.props.columnDropDownSubmit(this.parseColumnPaste(values.columns))\r\n                    }}\r\n                >\r\n                    {({ values, handleChange, handleSubmit }) => {\r\n\r\n                        return (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Field>\r\n                                    <input\r\n                                        id=\"columns\"\r\n                                        type=\"text\"\r\n                                        value={values.columns}\r\n                                        onChange={handleChange}\r\n                                        className=\"text-input\"\r\n                                    />\r\n                                </Form.Field>\r\n\r\n                                <Button type=\"submit\">\r\n                                    Add Columns\r\n                                </Button>\r\n                            </Form>\r\n                        )\r\n\r\n                    }}\r\n                </Formik>\r\n                <ColumnDropDown />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state, ownProps)\r\n    // return { test: 'test' }\r\n    if (ownProps.nodeProperty == null) {\r\n        return { nodeProperties: null }\r\n    } else {\r\n        return { nodeProperties: state.mainFlowNodes[ownProps.nodeProperty] }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { modifyNodeProperty, columnDropDownSubmit })(settingFields);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\nodePropertyBox\\data_column_components\\columnDropDownList.js",["140","141","142","143","144"],"import React from 'react';\r\nimport { Dropdown, Menu, Checkbox, Radio } from 'semantic-ui-react';\r\nimport { columnDropDownSubmit } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\n\r\nclass columnDropDownList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {'dropDownPersist': false}\r\n        \r\n    }\r\n\r\n    dropDownOnClick = () => {\r\n        this.setState({'dropDownPersist' : true})\r\n    }\r\n\r\n    onDropDownLeave = () => {\r\n        this.setState({'dropDownPersist' : false})\r\n    }\r\n\r\n    onRadioClick = (e, d) => {\r\n        // console.log('event: ', e, 'data: ', d)\r\n    }\r\n\r\n    getColumnChoices = () => {\r\n        let cols = _.keys(this.props.columnDropDownSelections)\r\n\r\n        let columnDropDown = cols.map((e) => {\r\n            return (\r\n                    <div id=\"column_dropdown_select\">\r\n                        <p>{e}</p>\r\n                        <Radio\r\n                            col_tar={e}\r\n                            value='txt'\r\n                            label='Text'\r\n                            checked= {this.props.columnDropDownSelections[e] == 'txt'}\r\n                            onChange= {this.onRadioClick}\r\n                        />\r\n                        <Radio\r\n                            col_tar={e}\r\n                            value='num'\r\n                            label='Numeric'\r\n                            checked={this.props.columnDropDownSelections[e] == 'num'}\r\n                        />\r\n\r\n                        <Radio\r\n                            col_tar={e}\r\n                            value='na'\r\n                            label='Do not use'\r\n                            checked={this.props.columnDropDownSelections[e] == 'na'}\r\n                        />\r\n                    </div> \r\n            )\r\n        })\r\n\r\n        return columnDropDown\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={(e,d)=>{console.log(e,d)}}\r\n                />\r\n                Hello\r\n                {this.getColumnChoices()}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        columnDropDownSelections : state.columnDropDownReducer\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { columnDropDownSubmit })(columnDropDownList);","A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\columnChoicesReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\highlightCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\reducers\\templateCodeReducer.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\mainAppLayout\\mainAppLayout.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_display_area\\templateDisplay.js",["145","146","147","148"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { parseNodeRequest } from '../../actions/index';\r\nimport FunctionBreakdownBar from './template_display_sections/functionBreakdown';\r\nimport {Accordion, Icon} from 'semantic-ui-react';\r\n\r\nclass templateDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.props.parseNodeRequest()\r\n        console.log('templateDisplay is called')\r\n        this.state = { activeIndex: [0,1]}\r\n    }\r\n\r\n    handleTitleClick = (e, titleProps) => {\r\n        const index = titleProps.index\r\n        const activeIndexAry = this.state.activeIndex\r\n\r\n        if (activeIndexAry.includes(index)) {\r\n            activeIndexAry.splice(activeIndexAry.indexOf(index), 1)\r\n            this.setState({ activeIndex: activeIndexAry })\r\n        } else {\r\n            this.setState({ activeIndex: activeIndexAry.concat(index) })\r\n        }\r\n\r\n    }\r\n\r\n    getHighlightStatus = (capture) => {\r\n        if (this.props.highlightCodeSelection.includes(capture)) {\r\n            return 'section'\r\n        }\r\n        \r\n        return ''\r\n    }\r\n\r\n    parseTemplateCode = () => {\r\n        let numColumnsToInsert = []\r\n        let txtColumnsToInsert = []\r\n        let numRegex = /<jsNumParse>/\r\n\r\n        if (this.props.columnChoices.insertColumnFlag) {\r\n            \r\n            for (let [colName, colType] of Object.entries(this.props.columnChoices)){\r\n                if (colName != 'insertColumnFlag'){\r\n                    if (colType == 'num'){\r\n                        numColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                    } else if (colType == 'txt'){\r\n                        txtColumnsToInsert.push(\"'\" + colName + \"'\")\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (numColumnsToInsert.length > 0) {\r\n                let replacedTemplate\r\n                numColumnsToInsert = numColumnsToInsert.join(',')\r\n                replacedTemplate = this.props.templateToDisplay.replace(numRegex, numColumnsToInsert)\r\n                return (replacedTemplate === this.props.templateToDisplay ? this.props.templateToDisplay : replacedTemplate)\r\n            }\r\n\r\n        }\r\n\r\n        return this.props.templateToDisplay\r\n\r\n    }\r\n\r\n    // parseTemplateCode = () => {\r\n    //     // let split_code = this.props.templateToDisplay.split('End Function')\r\n    //     let split_code = [1,2,3,4,5]\r\n    //     // let section_together = []\r\n    //     // let captureRegex = /Function (\\w+)/\r\n\r\n    //     // for (let [ind, func] of split_code.entries()) {\r\n    //     //     let capture = func.match(captureRegex)\r\n\r\n    //     //     if (capture != null) {\r\n    //     //         capture = capture[1]\r\n    //     //     } else {\r\n    //     //         capture = ''\r\n    //     //     }\r\n\r\n    //     let code = split_code.map((el, ind) => {\r\n    //         return (<div key={ind} className={this.props.highlightCodeSelection}>\r\n    //             {el}\r\n    //             {\"\\n\"}\r\n    //             {this.props.highlightCodeSelection}\r\n    //             End Function\r\n    //         </div>)\r\n    //     })\r\n\r\n\r\n    \r\n    //     return (\r\n                                    \r\n\r\n    //             code\r\n            \r\n    //     )\r\n\r\n    // }\r\n\r\n    render () {\r\n        if (this.props.templateToDisplay != '') {\r\n            \r\n            return (\r\n                <React.Fragment>\r\n                    <Accordion className=\"inner-cont\">\r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(0)}\r\n                            index={0}\r\n                            className=\"menu-header-h1 noselect\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            Template Code Function(s)\r\n                        </Accordion.Title>\r\n                        <Accordion.Content style={{paddingBottom: '0px'}} active={this.state.activeIndex.includes(0)}>\r\n                            <FunctionBreakdownBar />\r\n                        </Accordion.Content>\r\n                        \r\n                        <Accordion.Title\r\n                            onClick={this.handleTitleClick}\r\n                            active={this.state.activeIndex.includes(1)}\r\n                            index={1}\r\n                            className=\"menu-header-h1 noselect\"\r\n                        >\r\n                            <Icon name='dropdown' />\r\n                            Code\r\n                        </Accordion.Title>\r\n\r\n                        <Accordion.Content style={{marginLeft: \"7px\", height: '100%', maxHeight: 'calc(100vh - 251px)', overflow: 'auto'}} active={this.state.activeIndex.includes(1)}>\r\n                            <pre>                                \r\n                                <code className=\"vba\" >\r\n                                    {this.parseTemplateCode()}\r\n                                </code>\r\n                            </pre> \r\n\r\n                            {/* <div style={{border:\"2px black solid\"}}>\r\n                            </div> */}\r\n                        </Accordion.Content>\r\n\r\n                    </Accordion>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (null)\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo.template_code,\r\n        highlightCodeSelection: state.highlightCodeSelection,\r\n        columnChoices: state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {parseNodeRequest}) (templateDisplay)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp1_template_display_area\\template_display_sections\\functionBreakdown.js",["149","150","151","152","153","154"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {templateFunctionBreakdownSelect} from '../../../actions';\r\n\r\nclass functionBreakdownSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {'functionInfoSelected':'overall_descrip'}\r\n    }\r\n\r\n    funcBreakdownClick = (func_n) => {\r\n        this.props.templateFunctionBreakdownSelect(func_n)\r\n    }\r\n\r\n    onMouseEnter = (e, d) => {\r\n        // this.props.templateFunctionBreakdownSelect({'funcSelected' : e.target.id})\r\n        // this.setState({'functionInfoSelected': e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n    }\r\n\r\n    onFuncClick = (e) => {\r\n        this.setState({'functionInfoSelected':e.target.id})\r\n        this.props.templateFunctionBreakdownSelect(e.target.id)\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.props.templateFunctionBreakdownSelect(this.state.functionInfoSelected)\r\n    }\r\n\r\n    getFunctionBreakdown = () => {\r\n        if (this.props.templateToDisplay !=  null) {\r\n            // let split_code = this.props.templateToDisplay.split('End Function')\r\n            // let captureRegex = /Function (\\w+)/\r\n            let split_code;\r\n            let func_name;\r\n            split_code = Object.keys(this.props.templateToDisplay).map((func_name) => {\r\n                if ((func_name != 'template_code') && (func_name != 'overall_descrip')) {\r\n                    // let func_name;\r\n                    // func_name = el.match(captureRegex)[1]\r\n                    return (\r\n                        <p \r\n                        id={func_name}\r\n                        key={func_name}\r\n                        onClick={this.onFuncClick}\r\n                        onMouseEnter={this.onMouseEnter}\r\n                        onMouseLeave={this.onMouseLeave}\r\n                        className={this.state.functionInfoSelected == func_name ? 'active' : ''}>\r\n                            {func_name}\r\n                        </p>\r\n                    )\r\n                }\r\n            })\r\n            \r\n            split_code.splice(0, 0,\r\n                <p \r\n                    id=\"overall_descrip\"\r\n                    key=\"overall_descrip\"\r\n                    onClick={this.onFuncClick}\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                    className={this.state.functionInfoSelected == 'overall_descrip' ? 'active' : ''}>\r\n                        Template Code Overview\r\n                </p>)\r\n                \r\n            return split_code\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"function-break-down\">\r\n                    {this.getFunctionBreakdown()}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        templateToDisplay: state.templateCodeInfo,\r\n        funcInfoSelect: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {templateFunctionBreakdownSelect})(functionBreakdownSection)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\insertNewColumn.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\column_settings\\column_settings_sections\\currentColumnList.js",["155","156","157","158","159","160","161"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Dropdown, Checkbox, Menu, Radio } from 'semantic-ui-react';\r\nimport { columnTypeChanged, toggleInsertColumn } from '../../../../actions'\r\nimport hljs from 'highlight.js';\r\nimport hljsVba from 'highlight.js/lib/vba';\r\n\r\nclass currentColumnList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {colTypeMap: {\r\n            'na': 'Do not use',\r\n            'num': 'Numeric',\r\n            'txt': 'Text'\r\n        }}\r\n    }\r\n\r\n    newTypePicked = (e, data) => {\r\n        let tmp_type = {}\r\n        tmp_type[data.target_col] = data.value\r\n        this.props.columnTypeChanged(tmp_type)\r\n    }\r\n    \r\n    getColumnChoices = () => {\r\n        let cols = _.keys(this.props.columnChoices)\r\n        let columnDropDown = cols.map((e) => {\r\n            if (e != 'insertColumnFlag') {\r\n                return (\r\n                    <div className=\"column_choices_list\">\r\n                        <p>{e}</p>\r\n                        <div className='drop-down-cont'>\r\n                            <Dropdown\r\n                                options = {[{\r\n                                    key: {e} + 'na',\r\n                                    text:\"Do not use\",\r\n                                    value:'na',\r\n                                    active:this.props.columnChoices[e] == 'na'\r\n                                },\r\n                                {\r\n                                    key: {e} + 'num',\r\n                                    text:\"Numeric\",\r\n                                    value:'num',\r\n                                    active:this.props.columnChoices[e] == 'num',\r\n                                    \r\n                                },\r\n                                {\r\n                                    key: {e} + 'txt',\r\n                                    text:\"Text\",\r\n                                    value:'txt',\r\n                                    active:this.props.columnChoices[e] == 'txt'\r\n                                }]}\r\n\r\n                                text = {this.state.colTypeMap[this.props.columnChoices[e]]}\r\n                                target_col = {e}\r\n                                onChange = {this.newTypePicked}\r\n                            >\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                    </div> \r\n                )\r\n            }\r\n\r\n        })\r\n\r\n        return columnDropDown\r\n    }\r\n\r\n    toggleInsertColumn = (e, data) => {\r\n        if (data.checked) {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':true})\r\n        } else {\r\n            this.props.toggleInsertColumn({'insertColumnFlag':false})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render () {\r\n        hljs.initHighlighting.called = false;\r\n        hljs.initHighlighting();\r\n        hljs.registerLanguage(\"vba\", hljsVba);\r\n        return (\r\n            <React.Fragment>\r\n                <Checkbox toggle \r\n                    label=\"Insert Columns to Template\"\r\n                    onChange={this.toggleInsertColumn}\r\n                />\r\n                {this.getColumnChoices()}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        'columnChoices': state.columnChoices\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { toggleInsertColumn, columnTypeChanged } )(currentColumnList)","A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\index.js",[],"A:\\coding\\websites\\vba-macro-builder\\react\\src\\components\\comp3_config_info_box\\template_description\\template_description_sections\\template_description.js",["162","163"],"\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass templateDescription extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    displayHeading = () => {\r\n        if (this.props.selectedFuncInfo == 'overall_descrip'){\r\n            return \"ABOUT THIS TEMPLATE\"\r\n        } else {\r\n            return \"ABOUT THIS FUNCTION\"\r\n        }\r\n    }\r\n\r\n    renderTemplateDescrip = () => {\r\n        if (this.props.renderTemplateFlag) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"descrip-header\">{this.props.selectedFuncInfo}</p>\r\n                    <p className=\"descrip-txt\">\r\n                        {this.props.funcDescrip[this.props.selectedFuncInfo]}\r\n                    </p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n    render () {\r\n        if (this.props.funcDescrip != null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p topic=\"dq\" className=\"menu-header-h1\">{this.displayHeading()}</p>\r\n                    {this.renderTemplateDescrip()}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        funcDescrip : state.templateCodeInfo,\r\n        selectedFuncInfo: state.funcInfoSelected\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(templateDescription)",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":4,"column":7,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":13,"column":19,"nodeType":"174","messageId":"175","endLine":13,"endColumn":21},{"ruleId":"168","severity":1,"message":"176","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":16},{"ruleId":"168","severity":1,"message":"177","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":16},{"ruleId":"168","severity":1,"message":"178","line":5,"column":18,"nodeType":"170","messageId":"171","endLine":5,"endColumn":26},{"ruleId":"168","severity":1,"message":"179","line":5,"column":28,"nodeType":"170","messageId":"171","endLine":5,"endColumn":32},{"ruleId":"164","replacedBy":"180"},{"ruleId":"166","replacedBy":"181"},{"ruleId":"168","severity":1,"message":"177","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":33},{"ruleId":"168","severity":1,"message":"178","line":1,"column":35,"nodeType":"170","messageId":"171","endLine":1,"endColumn":43},{"ruleId":"168","severity":1,"message":"179","line":1,"column":45,"nodeType":"170","messageId":"171","endLine":1,"endColumn":49},{"ruleId":"168","severity":1,"message":"176","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"168","severity":1,"message":"182","line":5,"column":49,"nodeType":"170","messageId":"171","endLine":5,"endColumn":67},{"ruleId":"183","severity":1,"message":"184","line":5,"column":5,"nodeType":"185","messageId":"186","endLine":8,"endColumn":6},{"ruleId":"168","severity":1,"message":"187","line":1,"column":18,"nodeType":"170","messageId":"171","endLine":1,"endColumn":23},{"ruleId":"168","severity":1,"message":"188","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":19},{"ruleId":"168","severity":1,"message":"189","line":2,"column":21,"nodeType":"170","messageId":"171","endLine":2,"endColumn":25},{"ruleId":"168","severity":1,"message":"178","line":2,"column":35,"nodeType":"170","messageId":"171","endLine":2,"endColumn":43},{"ruleId":"168","severity":1,"message":"190","line":2,"column":51,"nodeType":"170","messageId":"171","endLine":2,"endColumn":54},{"ruleId":"168","severity":1,"message":"191","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":18},{"ruleId":"168","severity":1,"message":"192","line":2,"column":20,"nodeType":"170","messageId":"171","endLine":2,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":38,"column":78,"nodeType":"174","messageId":"175","endLine":38,"endColumn":80},{"ruleId":"172","severity":1,"message":"173","line":45,"column":77,"nodeType":"174","messageId":"175","endLine":45,"endColumn":79},{"ruleId":"172","severity":1,"message":"173","line":52,"column":77,"nodeType":"174","messageId":"175","endLine":52,"endColumn":79},{"ruleId":"172","severity":1,"message":"193","line":45,"column":29,"nodeType":"174","messageId":"175","endLine":45,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":46,"column":33,"nodeType":"174","messageId":"175","endLine":46,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":48,"column":40,"nodeType":"174","messageId":"175","endLine":48,"endColumn":42},{"ruleId":"172","severity":1,"message":"193","line":103,"column":42,"nodeType":"174","messageId":"175","endLine":103,"endColumn":44},{"ruleId":"168","severity":1,"message":"194","line":35,"column":17,"nodeType":"170","messageId":"171","endLine":35,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":36,"column":84,"nodeType":"197","messageId":"198","endLine":36,"endColumn":86},{"ruleId":"172","severity":1,"message":"193","line":37,"column":32,"nodeType":"174","messageId":"175","endLine":37,"endColumn":34},{"ruleId":"172","severity":1,"message":"193","line":37,"column":66,"nodeType":"174","messageId":"175","endLine":37,"endColumn":68},{"ruleId":"172","severity":1,"message":"173","line":47,"column":68,"nodeType":"174","messageId":"175","endLine":47,"endColumn":70},{"ruleId":"172","severity":1,"message":"173","line":61,"column":64,"nodeType":"174","messageId":"175","endLine":61,"endColumn":66},{"ruleId":"168","severity":1,"message":"192","line":4,"column":30,"nodeType":"170","messageId":"171","endLine":4,"endColumn":34},{"ruleId":"168","severity":1,"message":"199","line":4,"column":36,"nodeType":"170","messageId":"171","endLine":4,"endColumn":41},{"ruleId":"195","severity":1,"message":"196","line":27,"column":43,"nodeType":"197","messageId":"198","endLine":27,"endColumn":45},{"ruleId":"172","severity":1,"message":"193","line":28,"column":19,"nodeType":"174","messageId":"175","endLine":28,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":38,"column":72,"nodeType":"174","messageId":"175","endLine":38,"endColumn":74},{"ruleId":"172","severity":1,"message":"173","line":44,"column":72,"nodeType":"174","messageId":"175","endLine":44,"endColumn":74},{"ruleId":"172","severity":1,"message":"173","line":51,"column":72,"nodeType":"174","messageId":"175","endLine":51,"endColumn":74},{"ruleId":"183","severity":1,"message":"184","line":6,"column":5,"nodeType":"185","messageId":"186","endLine":9,"endColumn":6},{"ruleId":"172","severity":1,"message":"173","line":12,"column":41,"nodeType":"174","messageId":"175","endLine":12,"endColumn":43},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'INITIAL_STATE' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Formik' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Form' is defined but never used.",["200"],["201"],"'modifyNodeProperty' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Field' is defined but never used.","'Accordion' is defined but never used.","'Icon' is defined but never used.","'Tab' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","Expected '!==' and instead saw '!='.","'func_name' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]